Terminals unused in grammar

   BEGIN
   END
   SEMICOLON
   intval


Grammar

    0 $accept: instr $end

    1 instr: param_instr_3
    2      | param_instr_2
    3      | init_addr
    4      | varst
    5      | labelst

    6 param_instr_2: command operand COMMA operand

    7 param_instr_3: command3 operand COMMA operand COMMA operand

    8 operand: reg
    9        | memloc

   10 command: LD
   11        | ADD
   12        | ST

   13 command3: ADDCC

   14 reg: REG_R1
   15    | REG_R2
   16    | REG_R3
   17    | REG_R4
   18    | REG_R5
   19    | REG_R6
   20    | REG_R7
   21    | REG_R8
   22    | REG_R9
   23    | REG_R10
   24    | REG_R11
   25    | REG_R12
   26    | REG_R13
   27    | REG_R14
   28    | REG_R15

   29 memloc: LEFT_SQ_BR NAME RIGHT_SQ_BR

   30 init_addr: ORG INT

   31 labelst: NAME COLON param_instr_2
   32        | NAME COLON param_instr_3

   33 varst: NAME COLON INT


Terminals, with rules where they appear

$end (0) 0
error (256)
BEGIN (258)
END (259)
ORG (260) 30
LD (261) 10
ADD (262) 11
ADDCC (263) 13
ST (264) 12
REG_R1 (265) 14
REG_R2 (266) 15
REG_R3 (267) 16
REG_R4 (268) 17
REG_R5 (269) 18
REG_R6 (270) 19
REG_R7 (271) 20
REG_R8 (272) 21
REG_R9 (273) 22
REG_R10 (274) 23
REG_R11 (275) 24
REG_R12 (276) 25
REG_R13 (277) 26
REG_R14 (278) 27
REG_R15 (279) 28
COMMA (280) 6 7
COLON (281) 31 32 33
SEMICOLON (282)
LEFT_SQ_BR (283) 29
RIGHT_SQ_BR (284) 29
NAME (285) 29 31 32 33
intval (286)
INT (287) 30 33


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
instr (34)
    on left: 1 2 3 4 5, on right: 0
param_instr_2 (35)
    on left: 6, on right: 2 31
param_instr_3 (36)
    on left: 7, on right: 1 32
operand (37)
    on left: 8 9, on right: 6 7
command (38)
    on left: 10 11 12, on right: 6
command3 (39)
    on left: 13, on right: 7
reg (40)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28, on right:
    8
memloc (41)
    on left: 29, on right: 9
init_addr (42)
    on left: 30, on right: 3
labelst (43)
    on left: 31 32, on right: 5
varst (44)
    on left: 33, on right: 4


state 0

    0 $accept: . instr $end

    ORG    shift, and go to state 1
    LD     shift, and go to state 2
    ADD    shift, and go to state 3
    ADDCC  shift, and go to state 4
    ST     shift, and go to state 5
    NAME   shift, and go to state 6

    instr          go to state 7
    param_instr_2  go to state 8
    param_instr_3  go to state 9
    command        go to state 10
    command3       go to state 11
    init_addr      go to state 12
    labelst        go to state 13
    varst          go to state 14


state 1

   30 init_addr: ORG . INT

    INT  shift, and go to state 15


state 2

   10 command: LD .

    $default  reduce using rule 10 (command)


state 3

   11 command: ADD .

    $default  reduce using rule 11 (command)


state 4

   13 command3: ADDCC .

    $default  reduce using rule 13 (command3)


state 5

   12 command: ST .

    $default  reduce using rule 12 (command)


state 6

   31 labelst: NAME . COLON param_instr_2
   32        | NAME . COLON param_instr_3
   33 varst: NAME . COLON INT

    COLON  shift, and go to state 16


state 7

    0 $accept: instr . $end

    $end  shift, and go to state 17


state 8

    2 instr: param_instr_2 .

    $default  reduce using rule 2 (instr)


state 9

    1 instr: param_instr_3 .

    $default  reduce using rule 1 (instr)


state 10

    6 param_instr_2: command . operand COMMA operand

    REG_R1      shift, and go to state 18
    REG_R2      shift, and go to state 19
    REG_R3      shift, and go to state 20
    REG_R4      shift, and go to state 21
    REG_R5      shift, and go to state 22
    REG_R6      shift, and go to state 23
    REG_R7      shift, and go to state 24
    REG_R8      shift, and go to state 25
    REG_R9      shift, and go to state 26
    REG_R10     shift, and go to state 27
    REG_R11     shift, and go to state 28
    REG_R12     shift, and go to state 29
    REG_R13     shift, and go to state 30
    REG_R14     shift, and go to state 31
    REG_R15     shift, and go to state 32
    LEFT_SQ_BR  shift, and go to state 33

    operand  go to state 34
    reg      go to state 35
    memloc   go to state 36


state 11

    7 param_instr_3: command3 . operand COMMA operand COMMA operand

    REG_R1      shift, and go to state 18
    REG_R2      shift, and go to state 19
    REG_R3      shift, and go to state 20
    REG_R4      shift, and go to state 21
    REG_R5      shift, and go to state 22
    REG_R6      shift, and go to state 23
    REG_R7      shift, and go to state 24
    REG_R8      shift, and go to state 25
    REG_R9      shift, and go to state 26
    REG_R10     shift, and go to state 27
    REG_R11     shift, and go to state 28
    REG_R12     shift, and go to state 29
    REG_R13     shift, and go to state 30
    REG_R14     shift, and go to state 31
    REG_R15     shift, and go to state 32
    LEFT_SQ_BR  shift, and go to state 33

    operand  go to state 37
    reg      go to state 35
    memloc   go to state 36


state 12

    3 instr: init_addr .

    $default  reduce using rule 3 (instr)


state 13

    5 instr: labelst .

    $default  reduce using rule 5 (instr)


state 14

    4 instr: varst .

    $default  reduce using rule 4 (instr)


state 15

   30 init_addr: ORG INT .

    $default  reduce using rule 30 (init_addr)


state 16

   31 labelst: NAME COLON . param_instr_2
   32        | NAME COLON . param_instr_3
   33 varst: NAME COLON . INT

    LD     shift, and go to state 2
    ADD    shift, and go to state 3
    ADDCC  shift, and go to state 4
    ST     shift, and go to state 5
    INT    shift, and go to state 38

    param_instr_2  go to state 39
    param_instr_3  go to state 40
    command        go to state 10
    command3       go to state 11


state 17

    0 $accept: instr $end .

    $default  accept


state 18

   14 reg: REG_R1 .

    $default  reduce using rule 14 (reg)


state 19

   15 reg: REG_R2 .

    $default  reduce using rule 15 (reg)


state 20

   16 reg: REG_R3 .

    $default  reduce using rule 16 (reg)


state 21

   17 reg: REG_R4 .

    $default  reduce using rule 17 (reg)


state 22

   18 reg: REG_R5 .

    $default  reduce using rule 18 (reg)


state 23

   19 reg: REG_R6 .

    $default  reduce using rule 19 (reg)


state 24

   20 reg: REG_R7 .

    $default  reduce using rule 20 (reg)


state 25

   21 reg: REG_R8 .

    $default  reduce using rule 21 (reg)


state 26

   22 reg: REG_R9 .

    $default  reduce using rule 22 (reg)


state 27

   23 reg: REG_R10 .

    $default  reduce using rule 23 (reg)


state 28

   24 reg: REG_R11 .

    $default  reduce using rule 24 (reg)


state 29

   25 reg: REG_R12 .

    $default  reduce using rule 25 (reg)


state 30

   26 reg: REG_R13 .

    $default  reduce using rule 26 (reg)


state 31

   27 reg: REG_R14 .

    $default  reduce using rule 27 (reg)


state 32

   28 reg: REG_R15 .

    $default  reduce using rule 28 (reg)


state 33

   29 memloc: LEFT_SQ_BR . NAME RIGHT_SQ_BR

    NAME  shift, and go to state 41


state 34

    6 param_instr_2: command operand . COMMA operand

    COMMA  shift, and go to state 42


state 35

    8 operand: reg .

    $default  reduce using rule 8 (operand)


state 36

    9 operand: memloc .

    $default  reduce using rule 9 (operand)


state 37

    7 param_instr_3: command3 operand . COMMA operand COMMA operand

    COMMA  shift, and go to state 43


state 38

   33 varst: NAME COLON INT .

    $default  reduce using rule 33 (varst)


state 39

   31 labelst: NAME COLON param_instr_2 .

    $default  reduce using rule 31 (labelst)


state 40

   32 labelst: NAME COLON param_instr_3 .

    $default  reduce using rule 32 (labelst)


state 41

   29 memloc: LEFT_SQ_BR NAME . RIGHT_SQ_BR

    RIGHT_SQ_BR  shift, and go to state 44


state 42

    6 param_instr_2: command operand COMMA . operand

    REG_R1      shift, and go to state 18
    REG_R2      shift, and go to state 19
    REG_R3      shift, and go to state 20
    REG_R4      shift, and go to state 21
    REG_R5      shift, and go to state 22
    REG_R6      shift, and go to state 23
    REG_R7      shift, and go to state 24
    REG_R8      shift, and go to state 25
    REG_R9      shift, and go to state 26
    REG_R10     shift, and go to state 27
    REG_R11     shift, and go to state 28
    REG_R12     shift, and go to state 29
    REG_R13     shift, and go to state 30
    REG_R14     shift, and go to state 31
    REG_R15     shift, and go to state 32
    LEFT_SQ_BR  shift, and go to state 33

    operand  go to state 45
    reg      go to state 35
    memloc   go to state 36


state 43

    7 param_instr_3: command3 operand COMMA . operand COMMA operand

    REG_R1      shift, and go to state 18
    REG_R2      shift, and go to state 19
    REG_R3      shift, and go to state 20
    REG_R4      shift, and go to state 21
    REG_R5      shift, and go to state 22
    REG_R6      shift, and go to state 23
    REG_R7      shift, and go to state 24
    REG_R8      shift, and go to state 25
    REG_R9      shift, and go to state 26
    REG_R10     shift, and go to state 27
    REG_R11     shift, and go to state 28
    REG_R12     shift, and go to state 29
    REG_R13     shift, and go to state 30
    REG_R14     shift, and go to state 31
    REG_R15     shift, and go to state 32
    LEFT_SQ_BR  shift, and go to state 33

    operand  go to state 46
    reg      go to state 35
    memloc   go to state 36


state 44

   29 memloc: LEFT_SQ_BR NAME RIGHT_SQ_BR .

    $default  reduce using rule 29 (memloc)


state 45

    6 param_instr_2: command operand COMMA operand .

    $default  reduce using rule 6 (param_instr_2)


state 46

    7 param_instr_3: command3 operand COMMA operand . COMMA operand

    COMMA  shift, and go to state 47


state 47

    7 param_instr_3: command3 operand COMMA operand COMMA . operand

    REG_R1      shift, and go to state 18
    REG_R2      shift, and go to state 19
    REG_R3      shift, and go to state 20
    REG_R4      shift, and go to state 21
    REG_R5      shift, and go to state 22
    REG_R6      shift, and go to state 23
    REG_R7      shift, and go to state 24
    REG_R8      shift, and go to state 25
    REG_R9      shift, and go to state 26
    REG_R10     shift, and go to state 27
    REG_R11     shift, and go to state 28
    REG_R12     shift, and go to state 29
    REG_R13     shift, and go to state 30
    REG_R14     shift, and go to state 31
    REG_R15     shift, and go to state 32
    LEFT_SQ_BR  shift, and go to state 33

    operand  go to state 48
    reg      go to state 35
    memloc   go to state 36


state 48

    7 param_instr_3: command3 operand COMMA operand COMMA operand .

    $default  reduce using rule 7 (param_instr_3)
