Release 12.4 - xst M.81d (lin64)
Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
--> 

TABLE OF CONTENTS
  1) Synthesis Options Summary
  2) HDL Compilation
  3) Design Hierarchy Analysis
  4) HDL Analysis
  5) HDL Synthesis
     5.1) HDL Synthesis Report
  6) Advanced HDL Synthesis
     6.1) Advanced HDL Synthesis Report
  7) Low Level Synthesis
  8) Partition Report
  9) Final Report
	9.1) Device utilization summary
	9.2) Partition Resource Summary
	9.3) TIMING REPORT


=========================================================================
*                      Synthesis Options Summary                        *
=========================================================================
---- Source Parameters
Input File Name                    : "system.prj"
Input Format                       : MIXED

---- Target Parameters
Output File Name                   : "system.ngc"
Target Device                      : xc3S100e-VQ100-4

---- Source Options
Top Module Name                    : system
Automatic Register Balancing       : yes

---- General Options
Optimization Goal                  : AREA
Optimization Effort                : 2
RTL Output                         : yes

=========================================================================


=========================================================================
*                          HDL Compilation                              *
=========================================================================
Compiling verilog file "../system.v" in library work
Compiling verilog file "../rtl/uart_tx.v" in library work
Module <system> compiled
Compiling verilog file "../rtl/uart_rx.v" in library work
Module <uart_tx> compiled
Compiling verilog file "../rtl/IO_mem.v" in library work
Module <uart_rx> compiled
Compiling verilog file "../rtl/uart.v" in library work
Module <IO_mem> compiled
Compiling verilog file "../rtl/counter.v" in library work
Module <uart> compiled
Compiling verilog file "../rtl/flag_buf.v" in library work
Module <counter> compiled
Compiling verilog file "../rtl/reg.v" in library work
Module <flag_buf> compiled
Compiling verilog file "../rtl/multiplexor.v" in library work
Module <registro> compiled
Compiling verilog file "../rtl/debounce.v" in library work
Module <multiplexor> compiled
Compiling verilog file "../rtl/fifo.v" in library work
Module <debounce> compiled
Module <fifo> compiled
No errors in compilation
Analysis of file <"system.prj"> succeeded.
 

=========================================================================
*                     Design Hierarchy Analysis                         *
=========================================================================
Analyzing hierarchy for module <system> in library <work> with parameters.
	clk_freq = "00000010111110101111000010000000"

Analyzing hierarchy for module <uart> in library <work> with parameters.
	DBIT = "00000000000000000000000000001000"
	DVSR = "00000000000000000000000101000110"
	DVSR_BIT = "00000000000000000000000000001001"
	FIFO_W = "00000000000000000000000000000011"
	SB_TICK = "00000000000000000000000000010000"

Analyzing hierarchy for module <multiplexor> in library <work> with parameters.
	N = "00000000000000000000000000000001"
	R = "00000000000000000000000000000010"
	T = "00000000000000000000000000001000"

Analyzing hierarchy for module <debounce> in library <work> with parameters.
	N = "00000000000000000000000000010101"
	one = "10"
	wait0 = "01"
	wait1 = "11"
	zero = "00"

Analyzing hierarchy for module <counter> in library <work> with parameters.
	M = "00000000000000000000000101000110"
	N = "00000000000000000000000000001001"

Analyzing hierarchy for module <uart_rx> in library <work> with parameters.
	DBIT = "00000000000000000000000000001000"
	SB_TICK = "00000000000000000000000000010000"
	data = "10"
	idle = "00"
	start = "01"
	stop = "11"

Analyzing hierarchy for module <fifo> in library <work> with parameters.
	B = "00000000000000000000000000001000"
	W = "00000000000000000000000000000011"

Analyzing hierarchy for module <uart_tx> in library <work> with parameters.
	DBIT = "00000000000000000000000000001000"
	SB_TICK = "00000000000000000000000000010000"
	data = "10"
	idle = "00"
	start = "01"
	stop = "11"


=========================================================================
*                            HDL Analysis                               *
=========================================================================
Analyzing top module <system>.
	clk_freq = 32'sb00000010111110101111000010000000
Module <system> is correct for synthesis.
 
Analyzing module <uart> in library <work>.
	DBIT = 32'sb00000000000000000000000000001000
	DVSR = 32'sb00000000000000000000000101000110
	DVSR_BIT = 32'sb00000000000000000000000000001001
	FIFO_W = 32'sb00000000000000000000000000000011
	SB_TICK = 32'sb00000000000000000000000000010000
Module <uart> is correct for synthesis.
 
Analyzing module <counter> in library <work>.
	M = 32'sb00000000000000000000000101000110
	N = 32'sb00000000000000000000000000001001
Module <counter> is correct for synthesis.
 
Analyzing module <uart_rx> in library <work>.
	DBIT = 32'sb00000000000000000000000000001000
	SB_TICK = 32'sb00000000000000000000000000010000
	data = 2'b10
	idle = 2'b00
	start = 2'b01
	stop = 2'b11
Module <uart_rx> is correct for synthesis.
 
Analyzing module <fifo> in library <work>.
	B = 32'sb00000000000000000000000000001000
	W = 32'sb00000000000000000000000000000011
Module <fifo> is correct for synthesis.
 
Analyzing module <uart_tx> in library <work>.
	DBIT = 32'sb00000000000000000000000000001000
	SB_TICK = 32'sb00000000000000000000000000010000
	data = 2'b10
	idle = 2'b00
	start = 2'b01
	stop = 2'b11
Module <uart_tx> is correct for synthesis.
 
Analyzing module <multiplexor> in library <work>.
	N = 32'sb00000000000000000000000000000001
	R = 32'sb00000000000000000000000000000010
	T = 32'sb00000000000000000000000000001000
Module <multiplexor> is correct for synthesis.
 
Analyzing module <debounce> in library <work>.
	N = 32'sb00000000000000000000000000010101
	one = 2'b10
	wait0 = 2'b01
	wait1 = 2'b11
	zero = 2'b00
Module <debounce> is correct for synthesis.
 

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Performing bidirectional port resolution...

Synthesizing Unit <multiplexor>.
    Related source file is "../rtl/multiplexor.v".
Unit <multiplexor> synthesized.


Synthesizing Unit <debounce>.
    Related source file is "../rtl/debounce.v".
INFO:Xst:2117 - HDL ADVISOR - Mux Selector <state_reg> of Case statement line 77 was re-encoded using one-hot encoding. The case statement will be optimized (default statement optimization), but this optimization may lead to design initialization problems. To ensure the design works safely, you can:
   	- add an 'INIT' attribute on signal <state_reg> (optimization is then done without any risk)
   	- use the attribute 'signal_encoding user' to avoid onehot optimization
   	- use the attribute 'safe_implementation yes' to force XST to perform a safe (but less efficient) optimization
    Found finite state machine <FSM_0> for signal <state_reg>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 10                                             |
    | Inputs             | 3                                              |
    | Outputs            | 5                                              |
    | Clock              | clk                       (rising_edge)        |
    | Reset              | reset                     (positive)           |
    | Reset type         | asynchronous                                   |
    | Reset State        | 00                                             |
    | Encoding           | automatic                                      |
    | Implementation     | automatic                                      |
    -----------------------------------------------------------------------
    Found 21-bit register for signal <q_reg>.
    Summary:
	inferred   1 Finite State Machine(s).
	inferred  21 D-type flip-flop(s).
	inferred   1 Adder/Subtractor(s).
Unit <debounce> synthesized.


Synthesizing Unit <counter>.
    Related source file is "../rtl/counter.v".
    Found 9-bit adder for signal <r_next$addsub0000> created at line 60.
    Found 9-bit register for signal <r_reg>.
    Summary:
	inferred   9 D-type flip-flop(s).
	inferred   1 Adder/Subtractor(s).
Unit <counter> synthesized.


Synthesizing Unit <uart_rx>.
    Related source file is "../rtl/uart_rx.v".
INFO:Xst:2117 - HDL ADVISOR - Mux Selector <state_reg> of Case statement line 87 was re-encoded using one-hot encoding. The case statement will be optimized (default statement optimization), but this optimization may lead to design initialization problems. To ensure the design works safely, you can:
   	- add an 'INIT' attribute on signal <state_reg> (optimization is then done without any risk)
   	- use the attribute 'signal_encoding user' to avoid onehot optimization
   	- use the attribute 'safe_implementation yes' to force XST to perform a safe (but less efficient) optimization
    Found finite state machine <FSM_1> for signal <state_reg>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 12                                             |
    | Inputs             | 5                                              |
    | Outputs            | 4                                              |
    | Clock              | clk                       (rising_edge)        |
    | Reset              | reset                     (positive)           |
    | Reset type         | asynchronous                                   |
    | Reset State        | 00                                             |
    | Encoding           | automatic                                      |
    | Implementation     | automatic                                      |
    -----------------------------------------------------------------------
    Found 8-bit register for signal <b_reg>.
    Found 3-bit adder for signal <n_next$addsub0000> created at line 113.
    Found 3-bit register for signal <n_reg>.
    Found 4-bit adder for signal <s_next$share0000> created at line 87.
    Found 4-bit register for signal <s_reg>.
    Summary:
	inferred   1 Finite State Machine(s).
	inferred  15 D-type flip-flop(s).
	inferred   2 Adder/Subtractor(s).
Unit <uart_rx> synthesized.


Synthesizing Unit <fifo>.
    Related source file is "../rtl/fifo.v".
    Found 8x8-bit dual-port RAM <Mram_array_reg> for signal <array_reg>.
    Found 1-bit 4-to-1 multiplexer for signal <empty_next>.
    Found 3-bit comparator equal for signal <empty_next$cmp_eq0000> created at line 102.
    Found 1-bit register for signal <empty_reg>.
    Found 1-bit 4-to-1 multiplexer for signal <full_next>.
    Found 3-bit comparator equal for signal <full_next$cmp_eq0000> created at line 110.
    Found 1-bit register for signal <full_reg>.
    Found 3-bit register for signal <r_ptr_reg>.
    Found 3-bit adder for signal <r_ptr_succ>.
    Found 3-bit register for signal <w_ptr_reg>.
    Found 3-bit adder for signal <w_ptr_succ>.
    Summary:
	inferred   1 RAM(s).
	inferred   8 D-type flip-flop(s).
	inferred   2 Adder/Subtractor(s).
	inferred   2 Comparator(s).
	inferred   2 Multiplexer(s).
Unit <fifo> synthesized.


Synthesizing Unit <uart_tx>.
    Related source file is "../rtl/uart_tx.v".
INFO:Xst:2117 - HDL ADVISOR - Mux Selector <state_reg> of Case statement line 93 was re-encoded using one-hot encoding. The case statement will be optimized (default statement optimization), but this optimization may lead to design initialization problems. To ensure the design works safely, you can:
   	- add an 'INIT' attribute on signal <state_reg> (optimization is then done without any risk)
   	- use the attribute 'signal_encoding user' to avoid onehot optimization
   	- use the attribute 'safe_implementation yes' to force XST to perform a safe (but less efficient) optimization
    Found finite state machine <FSM_2> for signal <state_reg>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 12                                             |
    | Inputs             | 4                                              |
    | Outputs            | 4                                              |
    | Clock              | clk                       (rising_edge)        |
    | Reset              | reset                     (positive)           |
    | Reset type         | asynchronous                                   |
    | Reset State        | 00                                             |
    | Encoding           | automatic                                      |
    | Implementation     | automatic                                      |
    -----------------------------------------------------------------------
    Found 8-bit register for signal <b_reg>.
    Found 3-bit adder for signal <n_next$addsub0000> created at line 128.
    Found 3-bit register for signal <n_reg>.
    Found 4-bit adder for signal <s_next$share0000> created at line 93.
    Found 4-bit register for signal <s_reg>.
    Found 1-bit register for signal <tx_reg>.
    Summary:
	inferred   1 Finite State Machine(s).
	inferred  16 D-type flip-flop(s).
	inferred   2 Adder/Subtractor(s).
Unit <uart_tx> synthesized.


Synthesizing Unit <uart>.
    Related source file is "../rtl/uart.v".
Unit <uart> synthesized.


Synthesizing Unit <system>.
    Related source file is "../system.v".
Unit <system> synthesized.


=========================================================================
HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 2
 8x8-bit dual-port RAM                                 : 2
# Adders/Subtractors                                   : 11
 21-bit subtractor                                     : 2
 3-bit adder                                           : 6
 4-bit adder                                           : 2
 9-bit adder                                           : 1
# Registers                                            : 18
 1-bit register                                        : 5
 21-bit register                                       : 2
 3-bit register                                        : 6
 4-bit register                                        : 2
 8-bit register                                        : 2
 9-bit register                                        : 1
# Comparators                                          : 4
 3-bit comparator equal                                : 4
# Multiplexers                                         : 4
 1-bit 4-to-1 multiplexer                              : 4

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================

Analyzing FSM <FSM_2> for best encoding.
Optimizing FSM <uart_master/uart_tx_unit/state_reg/FSM> on signal <state_reg[1:2]> with gray encoding.
-------------------
 State | Encoding
-------------------
 00    | 00
 01    | 01
 10    | 11
 11    | 10
-------------------
Analyzing FSM <FSM_1> for best encoding.
Optimizing FSM <uart_master/uart_rx_unit/state_reg/FSM> on signal <state_reg[1:2]> with gray encoding.
-------------------
 State | Encoding
-------------------
 00    | 00
 01    | 01
 10    | 11
 11    | 10
-------------------
Analyzing FSM <FSM_0> for best encoding.
Optimizing FSM <debRD/state_reg/FSM> on signal <state_reg[1:2]> with gray encoding.
Optimizing FSM <debWR/state_reg/FSM> on signal <state_reg[1:2]> with gray encoding.
-------------------
 State | Encoding
-------------------
 00    | 00
 01    | 10
 10    | 11
 11    | 01
-------------------

Synthesizing (advanced) Unit <fifo>.
INFO:Xst:3030 - HDL ADVISOR - Register <b_reg> currently described with an asynchronous reset, could be combined with distributed RAM <Mram_array_reg> for implementation on block RAM resources if you made this reset synchronous instead.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 8-word x 8-bit                      |          |
    |     clkA           | connected to signal <clk>           | rise     |
    |     weA            | connected to signal <wr_en>         | high     |
    |     addrA          | connected to signal <w_ptr_reg>     |          |
    |     diA            | connected to signal <w_data>        |          |
    -----------------------------------------------------------------------
    | Port B                                                              |
    |     aspect ratio   | 8-word x 8-bit                      |          |
    |     addrB          | connected to signal <r_ptr_reg>     |          |
    |     doB            | connected to signal <r_data>        |          |
    -----------------------------------------------------------------------
Unit <fifo> synthesized (advanced).

=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# FSMs                                                 : 3
# RAMs                                                 : 2
 8x8-bit dual-port distributed RAM                     : 2
# Adders/Subtractors                                   : 11
 21-bit subtractor                                     : 2
 3-bit adder                                           : 6
 4-bit adder                                           : 2
 9-bit adder                                           : 1
# Registers                                            : 98
 Flip-Flops                                            : 98
# Comparators                                          : 4
 3-bit comparator equal                                : 4
# Multiplexers                                         : 4
 1-bit 4-to-1 multiplexer                              : 4

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================

Optimizing unit <system> ...

Optimizing unit <debounce> ...

Optimizing unit <counter> ...

Optimizing unit <uart_rx> ...

Optimizing unit <fifo> ...

Optimizing unit <uart_tx> ...

Mapping all equations...
Building and optimizing final netlist ...
Forward register balancing over carry chain debWR/Msub__old_q_next_6_cy<0>
Forward register balancing over carry chain debRD/Msub__old_q_next_6_cy<0>

Pipelining and Register Balancing Report ...

Processing Unit <system> :
	Register(s) uart_master/fifo_rx_unit/empty_reg has(ve) been backward balanced into : uart_master/fifo_rx_unit/empty_reg_BRB0 uart_master/fifo_rx_unit/empty_reg_BRB1 uart_master/fifo_rx_unit/empty_reg_BRB2.
	Register(s) uart_master/fifo_rx_unit/full_reg has(ve) been backward balanced into : uart_master/fifo_rx_unit/full_reg_BRB0 uart_master/fifo_rx_unit/full_reg_BRB1 uart_master/fifo_rx_unit/full_reg_BRB2.
	Register(s) uart_master/fifo_rx_unit/r_ptr_reg_1 has(ve) been backward balanced into : uart_master/fifo_rx_unit/r_ptr_reg_1_BRB0 uart_master/fifo_rx_unit/r_ptr_reg_1_BRB1.
	Register(s) uart_master/fifo_rx_unit/r_ptr_reg_2 has(ve) been backward balanced into : uart_master/fifo_rx_unit/r_ptr_reg_2_BRB0 uart_master/fifo_rx_unit/r_ptr_reg_2_BRB2.
	Register(s) uart_master/fifo_rx_unit/w_ptr_reg_1 has(ve) been backward balanced into : uart_master/fifo_rx_unit/w_ptr_reg_1_BRB0 uart_master/fifo_rx_unit/w_ptr_reg_1_BRB1.
	Register(s) uart_master/fifo_rx_unit/w_ptr_reg_2 has(ve) been backward balanced into : uart_master/fifo_rx_unit/w_ptr_reg_2_BRB0 uart_master/fifo_rx_unit/w_ptr_reg_2_BRB2.
	Register(s) uart_master/fifo_tx_unit/empty_reg has(ve) been backward balanced into : uart_master/fifo_tx_unit/empty_reg_BRB0 uart_master/fifo_tx_unit/empty_reg_BRB1 uart_master/fifo_tx_unit/empty_reg_BRB2 uart_master/fifo_tx_unit/empty_reg_BRB3.
	Register(s) uart_master/fifo_tx_unit/full_reg has(ve) been backward balanced into : uart_master/fifo_tx_unit/full_reg_BRB0 uart_master/fifo_tx_unit/full_reg_BRB1 uart_master/fifo_tx_unit/full_reg_BRB3.
	Register(s) uart_master/fifo_tx_unit/r_ptr_reg_1 has(ve) been backward balanced into : uart_master/fifo_tx_unit/r_ptr_reg_1_BRB1.
	Register(s) uart_master/fifo_tx_unit/r_ptr_reg_2 has(ve) been backward balanced into : uart_master/fifo_tx_unit/r_ptr_reg_2_BRB0 uart_master/fifo_tx_unit/r_ptr_reg_2_BRB1 uart_master/fifo_tx_unit/r_ptr_reg_2_BRB2.
	Register(s) uart_master/fifo_tx_unit/w_ptr_reg_1 has(ve) been backward balanced into : uart_master/fifo_tx_unit/w_ptr_reg_1_BRB1.
	Register(s) uart_master/fifo_tx_unit/w_ptr_reg_2 has(ve) been backward balanced into : uart_master/fifo_tx_unit/w_ptr_reg_2_BRB0 uart_master/fifo_tx_unit/w_ptr_reg_2_BRB1 uart_master/fifo_tx_unit/w_ptr_reg_2_BRB2.
	Register(s) uart_master/uart_rx_unit/b_reg_0 has(ve) been backward balanced into : uart_master/uart_rx_unit/b_reg_0_BRB1 uart_master/uart_rx_unit/b_reg_0_BRB2.
	Register(s) uart_master/uart_rx_unit/b_reg_1 has(ve) been backward balanced into : uart_master/uart_rx_unit/b_reg_1_BRB1 uart_master/uart_rx_unit/b_reg_1_BRB2.
	Register(s) uart_master/uart_rx_unit/b_reg_2 has(ve) been backward balanced into : uart_master/uart_rx_unit/b_reg_2_BRB1 uart_master/uart_rx_unit/b_reg_2_BRB2.
	Register(s) uart_master/uart_rx_unit/b_reg_3 has(ve) been backward balanced into : uart_master/uart_rx_unit/b_reg_3_BRB1 uart_master/uart_rx_unit/b_reg_3_BRB2.
	Register(s) uart_master/uart_rx_unit/b_reg_4 has(ve) been backward balanced into : uart_master/uart_rx_unit/b_reg_4_BRB1 uart_master/uart_rx_unit/b_reg_4_BRB2.
	Register(s) uart_master/uart_rx_unit/b_reg_5 has(ve) been backward balanced into : uart_master/uart_rx_unit/b_reg_5_BRB1 uart_master/uart_rx_unit/b_reg_5_BRB2.
	Register(s) uart_master/uart_rx_unit/b_reg_6 has(ve) been backward balanced into : uart_master/uart_rx_unit/b_reg_6_BRB1 uart_master/uart_rx_unit/b_reg_6_BRB2.
	Register(s) uart_master/uart_rx_unit/b_reg_7 has(ve) been backward balanced into : uart_master/uart_rx_unit/b_reg_7_BRB0 uart_master/uart_rx_unit/b_reg_7_BRB1 uart_master/uart_rx_unit/b_reg_7_BRB2.
	Register(s) uart_master/uart_rx_unit/n_reg_0 has(ve) been backward balanced into : uart_master/uart_rx_unit/n_reg_0_BRB0 uart_master/uart_rx_unit/n_reg_0_BRB1 uart_master/uart_rx_unit/n_reg_0_BRB2 .
	Register(s) uart_master/uart_rx_unit/n_reg_1 has(ve) been backward balanced into : uart_master/uart_rx_unit/n_reg_1_BRB0 uart_master/uart_rx_unit/n_reg_1_BRB1 uart_master/uart_rx_unit/n_reg_1_BRB3 .
	Register(s) uart_master/uart_rx_unit/n_reg_2 has(ve) been backward balanced into : uart_master/uart_rx_unit/n_reg_2_BRB0 uart_master/uart_rx_unit/n_reg_2_BRB1 uart_master/uart_rx_unit/n_reg_2_BRB2.
	Register(s) uart_master/uart_tx_unit/b_reg_0 has(ve) been backward balanced into : uart_master/uart_tx_unit/b_reg_0_BRB0 uart_master/uart_tx_unit/b_reg_0_BRB1 uart_master/uart_tx_unit/b_reg_0_BRB2 .
	Register(s) uart_master/uart_tx_unit/b_reg_1 has(ve) been backward balanced into : uart_master/uart_tx_unit/b_reg_1_BRB0 uart_master/uart_tx_unit/b_reg_1_BRB1 uart_master/uart_tx_unit/b_reg_1_BRB2 .
	Register(s) uart_master/uart_tx_unit/b_reg_2 has(ve) been backward balanced into : uart_master/uart_tx_unit/b_reg_2_BRB0 uart_master/uart_tx_unit/b_reg_2_BRB1 uart_master/uart_tx_unit/b_reg_2_BRB2 .
	Register(s) uart_master/uart_tx_unit/b_reg_3 has(ve) been backward balanced into : uart_master/uart_tx_unit/b_reg_3_BRB0 uart_master/uart_tx_unit/b_reg_3_BRB1 uart_master/uart_tx_unit/b_reg_3_BRB2 .
	Register(s) uart_master/uart_tx_unit/b_reg_4 has(ve) been backward balanced into : uart_master/uart_tx_unit/b_reg_4_BRB0 uart_master/uart_tx_unit/b_reg_4_BRB1 uart_master/uart_tx_unit/b_reg_4_BRB2 .
	Register(s) uart_master/uart_tx_unit/b_reg_5 has(ve) been backward balanced into : uart_master/uart_tx_unit/b_reg_5_BRB0 uart_master/uart_tx_unit/b_reg_5_BRB1 uart_master/uart_tx_unit/b_reg_5_BRB2 .
	Register(s) uart_master/uart_tx_unit/b_reg_6 has(ve) been backward balanced into : uart_master/uart_tx_unit/b_reg_6_BRB0 uart_master/uart_tx_unit/b_reg_6_BRB1 uart_master/uart_tx_unit/b_reg_6_BRB2 .
	Register(s) uart_master/uart_tx_unit/b_reg_7 has(ve) been backward balanced into : uart_master/uart_tx_unit/b_reg_7_BRB0 uart_master/uart_tx_unit/b_reg_7_BRB1 uart_master/uart_tx_unit/b_reg_7_BRB2 uart_master/uart_tx_unit/b_reg_7_BRB3.
	Register(s) uart_master/uart_tx_unit/tx_reg has(ve) been backward balanced into : uart_master/uart_tx_unit/tx_reg_BRB0 uart_master/uart_tx_unit/tx_reg_BRB1 uart_master/uart_tx_unit/tx_reg_BRB2.
Unit <system> processed.

Final Macro Processing ...

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 199
 Flip-Flops                                            : 199

=========================================================================

=========================================================================
*                           Partition Report                            *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Final Report                               *
=========================================================================
Final Results
RTL Top Level Output File Name     : system.ngr
Top Level Output File Name         : system.ngc
Output Format                      : ngc
Optimization Goal                  : AREA
Keep Hierarchy                     : no

Design Statistics
# IOs                              : 18

Cell Usage :
# BELS                             : 402
#      GND                         : 1
#      INV                         : 4
#      LUT1                        : 10
#      LUT2                        : 23
#      LUT3                        : 47
#      LUT4                        : 192
#      MUXCY                       : 60
#      MUXF5                       : 13
#      VCC                         : 1
#      XORCY                       : 51
# FlipFlops/Latches                : 199
#      FD                          : 26
#      FDC                         : 123
#      FDP                         : 50
# RAMS                             : 16
#      RAM16X1D                    : 16
# Clock Buffers                    : 1
#      BUFG                        : 1
# IO Buffers                       : 18
#      IBUF                        : 8
#      OBUF                        : 10
=========================================================================

Device utilization summary:
---------------------------

Selected Device : 3s100evq100-4 

 Number of Slices:                      171  out of    960    17%  
 Number of Slice Flip Flops:            199  out of   1920    10%  
 Number of 4 input LUTs:                308  out of   1920    16%  
    Number used as logic:               276
    Number used as RAMs:                 32
 Number of IOs:                          18
 Number of bonded IOBs:                  18  out of     66    27%  
 Number of GCLKs:                         1  out of     24     4%  

---------------------------
Partition Resource Summary:
---------------------------

  No Partitions were found in this design.

---------------------------


=========================================================================
TIMING REPORT

NOTE: THESE TIMING NUMBERS ARE ONLY A SYNTHESIS ESTIMATE.
      FOR ACCURATE TIMING INFORMATION PLEASE REFER TO THE TRACE REPORT
      GENERATED AFTER PLACE-and-ROUTE.

Clock Information:
------------------
-----------------------------------+------------------------+-------+
Clock Signal                       | Clock buffer(FF name)  | Load  |
-----------------------------------+------------------------+-------+
clk                                | IBUF+BUFG              | 215   |
-----------------------------------+------------------------+-------+

Asynchronous Control Signals Information:
----------------------------------------
-----------------------------------+---------------------------------+-------+
Control Signal                     | Buffer(FF name)                 | Load  |
-----------------------------------+---------------------------------+-------+
w_rst(w_rst1_INV_0:O)              | NONE(debRD/_old_q_next_6<0>_FRB)| 173   |
-----------------------------------+---------------------------------+-------+

Timing Summary:
---------------
Speed Grade: -4

   Minimum period: 8.421ns (Maximum Frequency: 118.748MHz)
   Minimum input arrival time before clock: 8.757ns
   Maximum output required time after clock: 8.970ns
   Maximum combinational path delay: 7.019ns

Timing Detail:
--------------
All values displayed in nanoseconds (ns)

=========================================================================
Timing constraint: Default period analysis for Clock 'clk'
  Clock period: 8.421ns (frequency: 118.748MHz)
  Total number of paths / destination ports: 5259 / 324
-------------------------------------------------------------------------
Delay:               8.421ns (Levels of Logic = 7)
  Source:            uart_master/baud_gen_unit/r_reg_2 (FF)
  Destination:       uart_master/uart_rx_unit/s_reg_2 (FF)
  Source Clock:      clk rising
  Destination Clock: clk rising

  Data Path: uart_master/baud_gen_unit/r_reg_2 to uart_master/uart_rx_unit/s_reg_2
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDC:C->Q              2   0.591   0.622  uart_master/baud_gen_unit/r_reg_2 (uart_master/baud_gen_unit/r_reg_2)
     LUT4:I0->O            1   0.704   0.455  uart_master/baud_gen_unit/r_next_cmp_eq000010 (uart_master/baud_gen_unit/r_next_cmp_eq000010)
     LUT4:I2->O           32   0.704   1.266  uart_master/baud_gen_unit/r_next_cmp_eq000027 (uart_master/tick)
     LUT4:I3->O            3   0.704   0.535  uart_master/uart_rx_unit/s_next<0>15 (uart_master/uart_rx_unit/N16)
     LUT4:I3->O            1   0.704   0.000  uart_master/uart_rx_unit/s_next<2>291 (uart_master/uart_rx_unit/s_next<2>291)
     MUXF5:I1->O           2   0.321   0.482  uart_master/uart_rx_unit/s_next<2>29_f5 (uart_master/uart_rx_unit/s_next<2>29)
     LUT3:I2->O            1   0.704   0.000  uart_master/uart_rx_unit/s_next<2>321 (uart_master/uart_rx_unit/s_next<2>32)
     MUXF5:I1->O           1   0.321   0.000  uart_master/uart_rx_unit/s_next<2>32_f5 (uart_master/uart_rx_unit/s_next<2>)
     FDC:D                     0.308          uart_master/uart_rx_unit/s_reg_2
    ----------------------------------------
    Total                      8.421ns (5.061ns logic, 3.360ns route)
                                       (60.1% logic, 39.9% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'clk'
  Total number of paths / destination ports: 1072 / 125
-------------------------------------------------------------------------
Offset:              8.757ns (Levels of Logic = 25)
  Source:            wr (PAD)
  Destination:       debWR/_old_q_next_6<20>_FRB (FF)
  Destination Clock: clk rising

  Data Path: wr to debWR/_old_q_next_6<20>_FRB
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O             5   1.218   0.808  wr_IBUF (wr_IBUF)
     LUT3:I0->O           41   0.704   1.300  debWR/q_next<0>21 (debWR/N11)
     LUT4:I2->O            2   0.704   0.622  debWR/q_next<0>1 (debWR/q_next<0>)
     LUT1:I0->O            1   0.704   0.000  debWR/Msub__old_q_next_6_cy<0>_rt (debWR/Msub__old_q_next_6_cy<0>_rt)
     MUXCY:S->O            1   0.464   0.000  debWR/Msub__old_q_next_6_cy<0> (debWR/Msub__old_q_next_6_cy<0>)
     MUXCY:CI->O           1   0.059   0.000  debWR/Msub__old_q_next_6_cy<1> (debWR/Msub__old_q_next_6_cy<1>)
     MUXCY:CI->O           1   0.059   0.000  debWR/Msub__old_q_next_6_cy<2> (debWR/Msub__old_q_next_6_cy<2>)
     MUXCY:CI->O           1   0.059   0.000  debWR/Msub__old_q_next_6_cy<3> (debWR/Msub__old_q_next_6_cy<3>)
     MUXCY:CI->O           1   0.059   0.000  debWR/Msub__old_q_next_6_cy<4> (debWR/Msub__old_q_next_6_cy<4>)
     MUXCY:CI->O           1   0.059   0.000  debWR/Msub__old_q_next_6_cy<5> (debWR/Msub__old_q_next_6_cy<5>)
     MUXCY:CI->O           1   0.059   0.000  debWR/Msub__old_q_next_6_cy<6> (debWR/Msub__old_q_next_6_cy<6>)
     MUXCY:CI->O           1   0.059   0.000  debWR/Msub__old_q_next_6_cy<7> (debWR/Msub__old_q_next_6_cy<7>)
     MUXCY:CI->O           1   0.059   0.000  debWR/Msub__old_q_next_6_cy<8> (debWR/Msub__old_q_next_6_cy<8>)
     MUXCY:CI->O           1   0.059   0.000  debWR/Msub__old_q_next_6_cy<9> (debWR/Msub__old_q_next_6_cy<9>)
     MUXCY:CI->O           1   0.059   0.000  debWR/Msub__old_q_next_6_cy<10> (debWR/Msub__old_q_next_6_cy<10>)
     MUXCY:CI->O           1   0.059   0.000  debWR/Msub__old_q_next_6_cy<11> (debWR/Msub__old_q_next_6_cy<11>)
     MUXCY:CI->O           1   0.059   0.000  debWR/Msub__old_q_next_6_cy<12> (debWR/Msub__old_q_next_6_cy<12>)
     MUXCY:CI->O           1   0.059   0.000  debWR/Msub__old_q_next_6_cy<13> (debWR/Msub__old_q_next_6_cy<13>)
     MUXCY:CI->O           1   0.059   0.000  debWR/Msub__old_q_next_6_cy<14> (debWR/Msub__old_q_next_6_cy<14>)
     MUXCY:CI->O           1   0.059   0.000  debWR/Msub__old_q_next_6_cy<15> (debWR/Msub__old_q_next_6_cy<15>)
     MUXCY:CI->O           1   0.059   0.000  debWR/Msub__old_q_next_6_cy<16> (debWR/Msub__old_q_next_6_cy<16>)
     MUXCY:CI->O           1   0.059   0.000  debWR/Msub__old_q_next_6_cy<17> (debWR/Msub__old_q_next_6_cy<17>)
     MUXCY:CI->O           1   0.059   0.000  debWR/Msub__old_q_next_6_cy<18> (debWR/Msub__old_q_next_6_cy<18>)
     MUXCY:CI->O           0   0.059   0.000  debWR/Msub__old_q_next_6_cy<19> (N57)
     XORCY:CI->O           1   0.804   0.000  debWR/Msub__old_q_next_6_xor<20> (N58)
     FDP:D                     0.308          debWR/_old_q_next_6<20>_FRB
    ----------------------------------------
    Total                      8.757ns (6.027ns logic, 2.730ns route)
                                       (68.8% logic, 31.2% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'clk'
  Total number of paths / destination ports: 80 / 9
-------------------------------------------------------------------------
Offset:              8.970ns (Levels of Logic = 5)
  Source:            uart_master/fifo_rx_unit/r_ptr_reg_1_BRB0 (FF)
  Destination:       lectura<0> (PAD)
  Source Clock:      clk rising

  Data Path: uart_master/fifo_rx_unit/r_ptr_reg_1_BRB0 to lectura<0>
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDC:C->Q              2   0.591   0.622  uart_master/fifo_rx_unit/r_ptr_reg_1_BRB0 (uart_master/fifo_rx_unit/r_ptr_reg_1_BRB0)
     LUT2:I0->O           13   0.704   0.983  uart_master/fifo_rx_unit/r_ptr_next<1>21 (uart_master/fifo_rx_unit/r_ptr_reg_1)
     RAM16X1D:DPRA1->DPO    2   0.704   0.622  uart_master/fifo_rx_unit/Mram_array_reg1 (dataUART<0>)
     LUT4:I0->O            1   0.704   0.000  muxer_ALU_CC/dataout<0>2 (muxer_ALU_CC/dataout<0>1)
     MUXF5:I0->O           2   0.321   0.447  muxer_ALU_CC/dataout<0>_f5 (lectura_0_OBUF)
     OBUF:I->O                 3.272          lectura_0_OBUF (lectura<0>)
    ----------------------------------------
    Total                      8.970ns (6.296ns logic, 2.674ns route)
                                       (70.2% logic, 29.8% route)

=========================================================================
Timing constraint: Default path analysis
  Total number of paths / destination ports: 31 / 9
-------------------------------------------------------------------------
Delay:               7.019ns (Levels of Logic = 4)
  Source:            selectorMuxMMIO (PAD)
  Destination:       lectura<1> (PAD)

  Data Path: selectorMuxMMIO to lectura<1>
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O            10   1.218   1.057  selectorMuxMMIO_IBUF (selectorMuxMMIO_IBUF)
     LUT4:I0->O            1   0.704   0.000  muxer_ALU_CC/dataout<1>2 (muxer_ALU_CC/dataout<1>1)
     MUXF5:I0->O           2   0.321   0.447  muxer_ALU_CC/dataout<1>_f5 (lectura_1_OBUF)
     OBUF:I->O                 3.272          lectura_1_OBUF (lectura<1>)
    ----------------------------------------
    Total                      7.019ns (5.515ns logic, 1.504ns route)
                                       (78.6% logic, 21.4% route)

=========================================================================


Total REAL time to Xst completion: 13.00 secs
Total CPU time to Xst completion: 13.07 secs
 
--> 


Total memory usage is 345296 kilobytes

Number of errors   :    0 (   0 filtered)
Number of warnings :    0 (   0 filtered)
Number of infos    :    4 (   0 filtered)

