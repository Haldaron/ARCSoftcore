Release 12.4 - xst M.81d (lin64)
Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
--> 

TABLE OF CONTENTS
  1) Synthesis Options Summary
  2) HDL Compilation
  3) Design Hierarchy Analysis
  4) HDL Analysis
  5) HDL Synthesis
     5.1) HDL Synthesis Report
  6) Advanced HDL Synthesis
     6.1) Advanced HDL Synthesis Report
  7) Low Level Synthesis
  8) Partition Report
  9) Final Report
	9.1) Device utilization summary
	9.2) Partition Resource Summary
	9.3) TIMING REPORT


=========================================================================
*                      Synthesis Options Summary                        *
=========================================================================
---- Source Parameters
Input File Name                    : "system.prj"
Input Format                       : MIXED

---- Target Parameters
Output File Name                   : "system.ngc"
Target Device                      : xc3S500e-VQ100-4

---- Source Options
Top Module Name                    : system
Automatic Register Balancing       : yes

---- General Options
Optimization Goal                  : AREA
Optimization Effort                : 2
RTL Output                         : yes

=========================================================================


=========================================================================
*                          HDL Compilation                              *
=========================================================================
Compiling verilog file "../system.v" in library work
Compiling verilog file "../rtl/main_memory.v" in library work
Module <system> compiled
Compiling verilog file "../rtl/control_section.v" in library work
Module <main_memory> compiled
Compiling verilog file "../rtl/control_section/control_branch_logic.v" in library work
Module <control_section> compiled
Compiling verilog file "../rtl/control_section/m_mir.v" in library work
Module <control_branch_logic> compiled
Compiling verilog file "../rtl/control_section/mux_csa.v" in library work
Module <m_mir> compiled
Compiling verilog file "../rtl/control_section/csai.v" in library work
Module <mux_csa> compiled
Compiling verilog file "../rtl/control_section/control_store.v" in library work
Module <csai> compiled
Compiling verilog file "../rtl/perifericos.v" in library work
Module <control_store> compiled
Compiling verilog file "../rtl/perifericos/uart_tx.v" in library work
Module <perifericos> compiled
Compiling verilog file "../rtl/perifericos/uart_rx.v" in library work
Module <uart_tx> compiled
Compiling verilog file "../rtl/perifericos/uart.v" in library work
Module <uart_rx> compiled
Compiling verilog file "../rtl/perifericos/debounce.v" in library work
Module <uart> compiled
Compiling verilog file "../rtl/perifericos/multiplexor8b.v" in library work
Module <debounce> compiled
Compiling verilog file "../rtl/perifericos/multiplexor32b.v" in library work
Module <multiplexor8b> compiled
Compiling verilog file "../rtl/perifericos/fifo.v" in library work
Module <multiplexor32b> compiled
Compiling verilog file "../rtl/perifericos/counter.v" in library work
Module <fifo> compiled
Compiling verilog file "../rtl/datapath.v" in library work
Module <counter> compiled
Compiling verilog file "../rtl/datapath/alu.v" in library work
Module <datapath> compiled
Compiling verilog file "../rtl/datapath/psr.v" in library work
Module <alu> compiled
Compiling verilog file "../rtl/datapath/multiplexor.v" in library work
Module <psr> compiled
Compiling verilog file "../rtl/datapath/shifter.v" in library work
Module <multiplexor> compiled
Compiling verilog file "../rtl/datapath/barrel_shifter.v" in library work
Module <shifter> compiled
Compiling verilog file "../rtl/datapath/shifter_control.v" in library work
Module <barrel_shifter> compiled
Compiling verilog file "../rtl/datapath/mux_instruction_selector.v" in library work
Module <shifter_control> compiled
Compiling verilog file "../rtl/datapath/reg.v" in library work
Module <mux_instruction_selector> compiled
Compiling verilog file "../rtl/datapath/decoder.v" in library work
Module <registro> compiled
Module <decoder> compiled
No errors in compilation
Analysis of file <"system.prj"> succeeded.
 

=========================================================================
*                     Design Hierarchy Analysis                         *
=========================================================================
Analyzing hierarchy for module <system> in library <work> with parameters.
	clk_freq = "00000010111110101111000010000000"

Analyzing hierarchy for module <control_section> in library <work>.

Analyzing hierarchy for module <datapath> in library <work> with parameters.
	R = "00000000000000000000000000010000"

Analyzing hierarchy for module <multiplexor32b> in library <work> with parameters.
	N = "00000000000000000000000000000001"
	R = "00000000000000000000000000000010"
	T = "00000000000000000000000000100000"

Analyzing hierarchy for module <main_memory> in library <work>.

Analyzing hierarchy for module <perifericos> in library <work> with parameters.
	clk_freq = "00000010111110101111000010000000"

Analyzing hierarchy for module <csai> in library <work>.

Analyzing hierarchy for module <control_branch_logic> in library <work> with parameters.
	Dec = "10"
	Jump = "01"
	Next = "00"

Analyzing hierarchy for module <mux_csa> in library <work>.

Analyzing hierarchy for module <control_store> in library <work>.

Analyzing hierarchy for module <m_mir> in library <work> with parameters.
	Refresh = "00000000000000000000000000000000000000001"
	Reset = "00000000000000000000000000000000"
	rst_mir = "10000001000000100101010010100000000000000"

Analyzing hierarchy for module <registro> in library <work>.

Analyzing hierarchy for module <mux_instruction_selector> in library <work> with parameters.
	M = "00000000000000000000000000000110"
	N = "00000000000000000000000000000001"

Analyzing hierarchy for module <multiplexor> in library <work> with parameters.
	M = "00000000000000000000000000100000"
	N = "00000000000000000000000000010110"
	P = "00000000000000000000000000000101"

Analyzing hierarchy for module <multiplexor> in library <work> with parameters.
	M = "00000000000000000000000000100000"
	N = "00000000000000000000000000000010"
	P = "00000000000000000000000000000001"

Analyzing hierarchy for module <decoder> in library <work>.

Analyzing hierarchy for module <alu> in library <work>.

Analyzing hierarchy for module <psr> in library <work> with parameters.
	Refresh = "10"
	Reset = "00"
	Wait = "01"

Analyzing hierarchy for module <shifter> in library <work>.

Analyzing hierarchy for module <uart> in library <work> with parameters.
	DBIT = "00000000000000000000000000001000"
	DVSR = "00000000000000000000000101000110"
	DVSR_BIT = "00000000000000000000000000001001"
	FIFO_W = "00000000000000000000000000000011"
	SB_TICK = "00000000000000000000000000010000"

Analyzing hierarchy for module <multiplexor8b> in library <work> with parameters.
	N = "00000000000000000000000000000001"
	R = "00000000000000000000000000000010"
	T = "00000000000000000000000000001000"

Analyzing hierarchy for module <debounce> in library <work> with parameters.
	N = "00000000000000000000000000010101"
	one = "10"
	wait0 = "01"
	wait1 = "11"
	zero = "00"

Analyzing hierarchy for module <shifter_control> in library <work>.

Analyzing hierarchy for module <barrel_shifter> in library <work>.

Analyzing hierarchy for module <counter> in library <work> with parameters.
	M = "00000000000000000000000101000110"
	N = "00000000000000000000000000001001"

Analyzing hierarchy for module <uart_rx> in library <work> with parameters.
	DBIT = "00000000000000000000000000001000"
	SB_TICK = "00000000000000000000000000010000"
	data = "10"
	idle = "00"
	start = "01"
	stop = "11"

Analyzing hierarchy for module <fifo> in library <work> with parameters.
	B = "00000000000000000000000000001000"
	W = "00000000000000000000000000000011"

Analyzing hierarchy for module <uart_tx> in library <work> with parameters.
	DBIT = "00000000000000000000000000001000"
	SB_TICK = "00000000000000000000000000010000"
	data = "10"
	idle = "00"
	start = "01"
	stop = "11"


=========================================================================
*                            HDL Analysis                               *
=========================================================================
Analyzing top module <system>.
	clk_freq = 32'sb00000010111110101111000010000000
Module <system> is correct for synthesis.
 
Analyzing module <control_section> in library <work>.
Module <control_section> is correct for synthesis.
 
Analyzing module <csai> in library <work>.
Module <csai> is correct for synthesis.
 
Analyzing module <control_branch_logic> in library <work>.
	Dec = 2'b10
	Jump = 2'b01
	Next = 2'b00
Module <control_branch_logic> is correct for synthesis.
 
Analyzing module <mux_csa> in library <work>.
Module <mux_csa> is correct for synthesis.
 
Analyzing module <control_store> in library <work>.
Module <control_store> is correct for synthesis.
 
Analyzing module <m_mir> in library <work>.
	Refresh = 41'b00000000000000000000000000000000000000001
	Reset = 32'sb00000000000000000000000000000000
	rst_mir = 41'b10000001000000100101010010100000000000000
Module <m_mir> is correct for synthesis.
 
Analyzing module <datapath> in library <work>.
	R = 32'sb00000000000000000000000000010000
Module <datapath> is correct for synthesis.
 
Analyzing module <registro> in library <work>.
Module <registro> is correct for synthesis.
 
Analyzing module <mux_instruction_selector> in library <work>.
	M = 32'sb00000000000000000000000000000110
	N = 32'sb00000000000000000000000000000001
Module <mux_instruction_selector> is correct for synthesis.
 
Analyzing module <multiplexor.1> in library <work>.
	M = 32'sb00000000000000000000000000100000
	N = 32'sb00000000000000000000000000010110
	P = 32'sb00000000000000000000000000000101
Module <multiplexor.1> is correct for synthesis.
 
Analyzing module <multiplexor.2> in library <work>.
	M = 32'sb00000000000000000000000000100000
	N = 32'sb00000000000000000000000000000010
	P = 32'sb00000000000000000000000000000001
Module <multiplexor.2> is correct for synthesis.
 
Analyzing module <decoder> in library <work>.
Module <decoder> is correct for synthesis.
 
Analyzing module <alu> in library <work>.
Module <alu> is correct for synthesis.
 
Analyzing module <psr> in library <work>.
	Refresh = 2'b10
	Reset = 2'b00
	Wait = 2'b01
Module <psr> is correct for synthesis.
 
Analyzing module <shifter> in library <work>.
Module <shifter> is correct for synthesis.
 
Analyzing module <shifter_control> in library <work>.
Module <shifter_control> is correct for synthesis.
 
Analyzing module <barrel_shifter> in library <work>.
Module <barrel_shifter> is correct for synthesis.
 
Analyzing module <multiplexor32b> in library <work>.
	N = 32'sb00000000000000000000000000000001
	R = 32'sb00000000000000000000000000000010
	T = 32'sb00000000000000000000000000100000
Module <multiplexor32b> is correct for synthesis.
 
Analyzing module <main_memory> in library <work>.
Module <main_memory> is correct for synthesis.
 
Analyzing module <perifericos> in library <work>.
	clk_freq = 32'sb00000010111110101111000010000000
Module <perifericos> is correct for synthesis.
 
Analyzing module <uart> in library <work>.
	DBIT = 32'sb00000000000000000000000000001000
	DVSR = 32'sb00000000000000000000000101000110
	DVSR_BIT = 32'sb00000000000000000000000000001001
	FIFO_W = 32'sb00000000000000000000000000000011
	SB_TICK = 32'sb00000000000000000000000000010000
Module <uart> is correct for synthesis.
 
Analyzing module <counter> in library <work>.
	M = 32'sb00000000000000000000000101000110
	N = 32'sb00000000000000000000000000001001
Module <counter> is correct for synthesis.
 
Analyzing module <uart_rx> in library <work>.
	DBIT = 32'sb00000000000000000000000000001000
	SB_TICK = 32'sb00000000000000000000000000010000
	data = 2'b10
	idle = 2'b00
	start = 2'b01
	stop = 2'b11
Module <uart_rx> is correct for synthesis.
 
Analyzing module <fifo> in library <work>.
	B = 32'sb00000000000000000000000000001000
	W = 32'sb00000000000000000000000000000011
Module <fifo> is correct for synthesis.
 
Analyzing module <uart_tx> in library <work>.
	DBIT = 32'sb00000000000000000000000000001000
	SB_TICK = 32'sb00000000000000000000000000010000
	data = 2'b10
	idle = 2'b00
	start = 2'b01
	stop = 2'b11
Module <uart_tx> is correct for synthesis.
 
Analyzing module <multiplexor8b> in library <work>.
	N = 32'sb00000000000000000000000000000001
	R = 32'sb00000000000000000000000000000010
	T = 32'sb00000000000000000000000000001000
Module <multiplexor8b> is correct for synthesis.
 
Analyzing module <debounce> in library <work>.
	N = 32'sb00000000000000000000000000010101
	one = 2'b10
	wait0 = 2'b01
	wait1 = 2'b11
	zero = 2'b00
Module <debounce> is correct for synthesis.
 

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Performing bidirectional port resolution...

Synthesizing Unit <multiplexor32b>.
    Related source file is "../rtl/perifericos/multiplexor32b.v".
Unit <multiplexor32b> synthesized.


Synthesizing Unit <main_memory>.
    Related source file is "../rtl/main_memory.v".
WARNING:Xst:1780 - Signal <data16> is never used or assigned. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:1780 - Signal <data12> is never used or assigned. This unconnected signal will be trimmed during the optimization process.
    Found 32-bit register for signal <data_out>.
    Found 32-bit register for signal <data0>.
    Found 32-bit 4-to-1 multiplexer for signal <data0$mux0000> created at line 107.
    Found 32-bit register for signal <data1>.
    Found 32-bit register for signal <data2>.
    Found 32-bit register for signal <data2048>.
    Found 32-bit register for signal <data2049>.
    Found 32-bit register for signal <data2050>.
    Found 32-bit register for signal <data2051>.
    Found 32-bit register for signal <data2052>.
    Found 32-bit register for signal <data2053>.
    Found 32-bit register for signal <data2054>.
    Found 32-bit register for signal <data2055>.
    Found 32-bit register for signal <data2056>.
    Found 32-bit register for signal <data2057>.
    Found 32-bit register for signal <data2058>.
    Found 32-bit register for signal <data2059>.
    Found 32-bit register for signal <data2060>.
    Found 32-bit register for signal <data2061>.
    Found 32-bit register for signal <data2062>.
    Found 32-bit register for signal <data2063>.
    Found 32-bit register for signal <data2064>.
    Found 32-bit register for signal <data2065>.
    Found 32-bit register for signal <data2066>.
    Found 32-bit register for signal <data2067>.
    Found 32-bit register for signal <data2068>.
    Found 32-bit register for signal <data2069>.
    Found 32-bit register for signal <data2070>.
    Found 32-bit register for signal <data2071>.
    Found 32-bit register for signal <data2072>.
    Found 32-bit register for signal <data2073>.
    Found 32-bit register for signal <data2074>.
    Found 32-bit register for signal <data2075>.
    Found 32-bit register for signal <data2076>.
    Found 32-bit register for signal <data2077>.
    Found 32-bit register for signal <data2078>.
    Found 32-bit register for signal <data2079>.
    Found 32-bit register for signal <data2080>.
    Found 32-bit register for signal <data2081>.
    Found 32-bit register for signal <data2082>.
    Found 32-bit register for signal <data2083>.
    Found 32-bit register for signal <data2084>.
    Found 32-bit register for signal <data2085>.
    Found 32-bit register for signal <data2086>.
    Found 32-bit register for signal <data2087>.
    Found 32-bit register for signal <data2088>.
    Found 32-bit register for signal <data2089>.
    Found 32-bit register for signal <data2090>.
    Found 32-bit register for signal <data2091>.
    Found 32-bit register for signal <data2092>.
    Found 32-bit register for signal <data2093>.
    Found 32-bit register for signal <data2094>.
    Found 32-bit register for signal <data2095>.
    Found 32-bit register for signal <data2096>.
    Found 32-bit register for signal <data2097>.
    Found 32-bit register for signal <data2098>.
    Found 32-bit register for signal <data2099>.
    Found 32-bit register for signal <data2100>.
    Found 32-bit register for signal <data2101>.
    Found 32-bit register for signal <data2102>.
    Found 32-bit register for signal <data2103>.
    Found 32-bit register for signal <data2104>.
    Found 32-bit register for signal <data2105>.
    Found 32-bit register for signal <data2106>.
    Found 32-bit register for signal <data2107>.
    Found 32-bit register for signal <data2108>.
    Found 32-bit register for signal <data2109>.
    Found 32-bit register for signal <data2110>.
    Found 32-bit register for signal <data2111>.
    Found 32-bit register for signal <data2112>.
    Found 32-bit register for signal <data2113>.
    Found 32-bit register for signal <data2114>.
    Found 32-bit register for signal <data2115>.
    Found 32-bit register for signal <data2116>.
    Found 32-bit register for signal <data2117>.
    Found 32-bit register for signal <data2118>.
    Found 32-bit register for signal <data2119>.
    Found 32-bit register for signal <data2120>.
    Found 32-bit register for signal <data3>.
    Found 32-bit register for signal <data4>.
    Found 32-bit register for signal <data5>.
    Found 32-bit register for signal <data6>.
    Found 32-bit register for signal <data7>.
    Found 32-bit register for signal <data8>.
    Summary:
	inferred 2656 D-type flip-flop(s).
	inferred  32 Multiplexer(s).
Unit <main_memory> synthesized.


Synthesizing Unit <csai>.
    Related source file is "../rtl/control_section/csai.v".
    Found 11-bit register for signal <next_addr>.
    Found 11-bit adder for signal <next_addr$add0000> created at line 9.
    Summary:
	inferred  11 D-type flip-flop(s).
	inferred   1 Adder/Subtractor(s).
Unit <csai> synthesized.


Synthesizing Unit <control_branch_logic>.
    Related source file is "../rtl/control_section/control_branch_logic.v".
    Found 2-bit 8-to-1 multiplexer for signal <out>.
    Summary:
	inferred   2 Multiplexer(s).
Unit <control_branch_logic> synthesized.


Synthesizing Unit <mux_csa>.
    Related source file is "../rtl/control_section/mux_csa.v".
    Found 11-bit 4-to-1 multiplexer for signal <out>.
    Summary:
	inferred  11 Multiplexer(s).
Unit <mux_csa> synthesized.


Synthesizing Unit <control_store>.
    Related source file is "../rtl/control_section/control_store.v".
Unit <control_store> synthesized.


Synthesizing Unit <m_mir>.
    Related source file is "../rtl/control_section/m_mir.v".
    Found 41-bit register for signal <out_mir>.
    Found 1-bit register for signal <rState>.
    Summary:
	inferred  42 D-type flip-flop(s).
Unit <m_mir> synthesized.


Synthesizing Unit <registro>.
    Related source file is "../rtl/datapath/reg.v".
    Found 32-bit register for signal <datareg>.
    Summary:
	inferred  32 D-type flip-flop(s).
Unit <registro> synthesized.


Synthesizing Unit <mux_instruction_selector>.
    Related source file is "../rtl/datapath/mux_instruction_selector.v".
Unit <mux_instruction_selector> synthesized.


Synthesizing Unit <multiplexor_1>.
    Related source file is "../rtl/datapath/multiplexor.v".
    Found 704-bit shifter logical right for signal <temp$shift0001> created at line 15.
    Summary:
	inferred   1 Combinational logic shifter(s).
Unit <multiplexor_1> synthesized.


Synthesizing Unit <multiplexor_2>.
    Related source file is "../rtl/datapath/multiplexor.v".
    Found 64-bit shifter logical right for signal <temp$shift0001> created at line 15.
    Summary:
	inferred   1 Combinational logic shifter(s).
Unit <multiplexor_2> synthesized.


Synthesizing Unit <decoder>.
    Related source file is "../rtl/datapath/decoder.v".
Unit <decoder> synthesized.


Synthesizing Unit <alu>.
    Related source file is "../rtl/datapath/alu.v".
    Found 32-bit 16-to-1 multiplexer for signal <busC>.
    Found 32-bit adder for signal <$add0000> created at line 37.
    Found 32-bit adder for signal <$add0001> created at line 42.
    Found 32-bit adder for signal <$add0002> created at line 43.
    Found 31-bit adder carry out for signal <AUX_4$addsub0000>.
    Found 1-bit adder carry out for signal <AUX_5$addsub0001> created at line 17.
    Found 1-bit xor2 for signal <ov>.
    Summary:
	inferred   6 Adder/Subtractor(s).
	inferred  32 Multiplexer(s).
Unit <alu> synthesized.


Synthesizing Unit <psr>.
    Related source file is "../rtl/datapath/psr.v".
    Found finite state machine <FSM_0> for signal <rState>.
    -----------------------------------------------------------------------
    | States             | 3                                              |
    | Transitions        | 5                                              |
    | Inputs             | 1                                              |
    | Outputs            | 3                                              |
    | Clock              | clk                       (rising_edge)        |
    | Reset              | rst                       (positive)           |
    | Reset type         | asynchronous                                   |
    | Reset State        | 00                                             |
    | Encoding           | automatic                                      |
    | Implementation     | automatic                                      |
    -----------------------------------------------------------------------
    Found 1-bit register for signal <zout>.
    Found 1-bit register for signal <cout>.
    Found 1-bit register for signal <nout>.
    Found 1-bit register for signal <vout>.
    Summary:
	inferred   1 Finite State Machine(s).
	inferred   4 D-type flip-flop(s).
Unit <psr> synthesized.


Synthesizing Unit <shifter_control>.
    Related source file is "../rtl/datapath/shifter_control.v".
Unit <shifter_control> synthesized.


Synthesizing Unit <barrel_shifter>.
    Related source file is "../rtl/datapath/barrel_shifter.v".
    Found 32-bit shifter logical left for signal <temp_1>.
    Found 32-bit shifter logical left for signal <temp_2>.
    Found 32-bit shifter logical left for signal <temp_3>.
    Found 32-bit shifter logical left for signal <temp_4>.
    Found 32-bit shifter logical right for signal <temp_6>.
    Found 32-bit shifter logical right for signal <temp_7>.
    Found 32-bit shifter logical right for signal <temp_8>.
    Found 32-bit shifter logical right for signal <temp_9>.
    Summary:
	inferred   8 Combinational logic shifter(s).
Unit <barrel_shifter> synthesized.


Synthesizing Unit <multiplexor8b>.
    Related source file is "../rtl/perifericos/multiplexor8b.v".
Unit <multiplexor8b> synthesized.


Synthesizing Unit <debounce>.
    Related source file is "../rtl/perifericos/debounce.v".
INFO:Xst:2117 - HDL ADVISOR - Mux Selector <state_reg> of Case statement line 77 was re-encoded using one-hot encoding. The case statement will be optimized (default statement optimization), but this optimization may lead to design initialization problems. To ensure the design works safely, you can:
   	- add an 'INIT' attribute on signal <state_reg> (optimization is then done without any risk)
   	- use the attribute 'signal_encoding user' to avoid onehot optimization
   	- use the attribute 'safe_implementation yes' to force XST to perform a safe (but less efficient) optimization
    Found finite state machine <FSM_1> for signal <state_reg>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 10                                             |
    | Inputs             | 3                                              |
    | Outputs            | 5                                              |
    | Clock              | clk                       (rising_edge)        |
    | Reset              | reset                     (positive)           |
    | Reset type         | asynchronous                                   |
    | Reset State        | 00                                             |
    | Encoding           | automatic                                      |
    | Implementation     | automatic                                      |
    -----------------------------------------------------------------------
    Found 21-bit register for signal <q_reg>.
    Summary:
	inferred   1 Finite State Machine(s).
	inferred  21 D-type flip-flop(s).
	inferred   1 Adder/Subtractor(s).
Unit <debounce> synthesized.


Synthesizing Unit <counter>.
    Related source file is "../rtl/perifericos/counter.v".
    Found 9-bit adder for signal <r_next$addsub0000> created at line 60.
    Found 9-bit register for signal <r_reg>.
    Summary:
	inferred   9 D-type flip-flop(s).
	inferred   1 Adder/Subtractor(s).
Unit <counter> synthesized.


Synthesizing Unit <uart_rx>.
    Related source file is "../rtl/perifericos/uart_rx.v".
INFO:Xst:2117 - HDL ADVISOR - Mux Selector <state_reg> of Case statement line 87 was re-encoded using one-hot encoding. The case statement will be optimized (default statement optimization), but this optimization may lead to design initialization problems. To ensure the design works safely, you can:
   	- add an 'INIT' attribute on signal <state_reg> (optimization is then done without any risk)
   	- use the attribute 'signal_encoding user' to avoid onehot optimization
   	- use the attribute 'safe_implementation yes' to force XST to perform a safe (but less efficient) optimization
    Found finite state machine <FSM_2> for signal <state_reg>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 12                                             |
    | Inputs             | 5                                              |
    | Outputs            | 4                                              |
    | Clock              | clk                       (rising_edge)        |
    | Reset              | reset                     (positive)           |
    | Reset type         | asynchronous                                   |
    | Reset State        | 00                                             |
    | Encoding           | automatic                                      |
    | Implementation     | automatic                                      |
    -----------------------------------------------------------------------
    Found 8-bit register for signal <b_reg>.
    Found 3-bit adder for signal <n_next$addsub0000> created at line 113.
    Found 3-bit register for signal <n_reg>.
    Found 4-bit adder for signal <s_next$share0000> created at line 87.
    Found 4-bit register for signal <s_reg>.
    Summary:
	inferred   1 Finite State Machine(s).
	inferred  15 D-type flip-flop(s).
	inferred   2 Adder/Subtractor(s).
Unit <uart_rx> synthesized.


Synthesizing Unit <fifo>.
    Related source file is "../rtl/perifericos/fifo.v".
    Found 8x8-bit dual-port RAM <Mram_array_reg> for signal <array_reg>.
    Found 1-bit 4-to-1 multiplexer for signal <empty_next>.
    Found 3-bit comparator equal for signal <empty_next$cmp_eq0000> created at line 102.
    Found 1-bit register for signal <empty_reg>.
    Found 1-bit 4-to-1 multiplexer for signal <full_next>.
    Found 3-bit comparator equal for signal <full_next$cmp_eq0000> created at line 110.
    Found 1-bit register for signal <full_reg>.
    Found 3-bit register for signal <r_ptr_reg>.
    Found 3-bit adder for signal <r_ptr_succ>.
    Found 3-bit register for signal <w_ptr_reg>.
    Found 3-bit adder for signal <w_ptr_succ>.
    Summary:
	inferred   1 RAM(s).
	inferred   8 D-type flip-flop(s).
	inferred   2 Adder/Subtractor(s).
	inferred   2 Comparator(s).
	inferred   2 Multiplexer(s).
Unit <fifo> synthesized.


Synthesizing Unit <uart_tx>.
    Related source file is "../rtl/perifericos/uart_tx.v".
INFO:Xst:2117 - HDL ADVISOR - Mux Selector <state_reg> of Case statement line 93 was re-encoded using one-hot encoding. The case statement will be optimized (default statement optimization), but this optimization may lead to design initialization problems. To ensure the design works safely, you can:
   	- add an 'INIT' attribute on signal <state_reg> (optimization is then done without any risk)
   	- use the attribute 'signal_encoding user' to avoid onehot optimization
   	- use the attribute 'safe_implementation yes' to force XST to perform a safe (but less efficient) optimization
    Found finite state machine <FSM_3> for signal <state_reg>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 12                                             |
    | Inputs             | 4                                              |
    | Outputs            | 4                                              |
    | Clock              | clk                       (rising_edge)        |
    | Reset              | reset                     (positive)           |
    | Reset type         | asynchronous                                   |
    | Reset State        | 00                                             |
    | Encoding           | automatic                                      |
    | Implementation     | automatic                                      |
    -----------------------------------------------------------------------
    Found 8-bit register for signal <b_reg>.
    Found 3-bit adder for signal <n_next$addsub0000> created at line 128.
    Found 3-bit register for signal <n_reg>.
    Found 4-bit adder for signal <s_next$share0000> created at line 93.
    Found 4-bit register for signal <s_reg>.
    Found 1-bit register for signal <tx_reg>.
    Summary:
	inferred   1 Finite State Machine(s).
	inferred  16 D-type flip-flop(s).
	inferred   2 Adder/Subtractor(s).
Unit <uart_tx> synthesized.


Synthesizing Unit <control_section>.
    Related source file is "../rtl/control_section.v".
WARNING:Xst:647 - Input <ir<29:25>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <ir<18:14>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <ir<12:0>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
Unit <control_section> synthesized.


Synthesizing Unit <shifter>.
    Related source file is "../rtl/datapath/shifter.v".
Unit <shifter> synthesized.


Synthesizing Unit <uart>.
    Related source file is "../rtl/perifericos/uart.v".
Unit <uart> synthesized.


Synthesizing Unit <datapath>.
    Related source file is "../rtl/datapath.v".
WARNING:Xst:647 - Input <mir<18>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <mir<13:0>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:646 - Signal <w_writer<31:16>> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:646 - Signal <w_writer<0>> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
    Found 5-bit subtractor for signal <w_auxiliar_a$addsub0000> created at line 425.
    Found 6-bit comparator less for signal <w_auxiliar_a$cmp_lt0000> created at line 425.
    Found 5-bit subtractor for signal <w_auxiliar_b$addsub0000> created at line 428.
    Found 6-bit comparator less for signal <w_auxiliar_b$cmp_lt0000> created at line 428.
    Summary:
	inferred   2 Adder/Subtractor(s).
	inferred   2 Comparator(s).
Unit <datapath> synthesized.


Synthesizing Unit <perifericos>.
    Related source file is "../rtl/perifericos.v".
WARNING:Xst:1305 - Output <reloj> is never assigned. Tied to value 0.
WARNING:Xst:1780 - Signal <dataOutMuxIO> is never used or assigned. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:1780 - Signal <dataOutMM_IO> is never used or assigned. This unconnected signal will be trimmed during the optimization process.
Unit <perifericos> synthesized.


Synthesizing Unit <system>.
    Related source file is "../system.v".
Unit <system> synthesized.


=========================================================================
HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 2
 8x8-bit dual-port RAM                                 : 2
# Adders/Subtractors                                   : 20
 1-bit adder carry out                                 : 1
 11-bit adder                                          : 1
 2-bit adder                                           : 1
 21-bit subtractor                                     : 2
 3-bit adder                                           : 6
 31-bit adder carry out                                : 1
 32-bit adder                                          : 3
 4-bit adder                                           : 2
 5-bit subtractor                                      : 2
 9-bit adder                                           : 1
# Registers                                            : 129
 1-bit register                                        : 10
 11-bit register                                       : 1
 21-bit register                                       : 2
 3-bit register                                        : 6
 32-bit register                                       : 104
 4-bit register                                        : 2
 41-bit register                                       : 1
 8-bit register                                        : 2
 9-bit register                                        : 1
# Comparators                                          : 6
 3-bit comparator equal                                : 4
 6-bit comparator less                                 : 2
# Multiplexers                                         : 39
 1-bit 16-to-1 multiplexer                             : 32
 1-bit 4-to-1 multiplexer                              : 4
 11-bit 4-to-1 multiplexer                             : 1
 2-bit 8-to-1 multiplexer                              : 1
 32-bit 4-to-1 multiplexer                             : 1
# Logic shifters                                       : 11
 32-bit shifter logical left                           : 4
 32-bit shifter logical right                          : 4
 64-bit shifter logical right                          : 1
 704-bit shifter logical right                         : 2
# Xors                                                 : 1
 1-bit xor2                                            : 1

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================

Analyzing FSM <FSM_3> for best encoding.
Optimizing FSM <p1/uart_master/uart_tx_unit/state_reg/FSM> on signal <state_reg[1:2]> with gray encoding.
-------------------
 State | Encoding
-------------------
 00    | 00
 01    | 01
 10    | 11
 11    | 10
-------------------
Analyzing FSM <FSM_2> for best encoding.
Optimizing FSM <p1/uart_master/uart_rx_unit/state_reg/FSM> on signal <state_reg[1:2]> with gray encoding.
-------------------
 State | Encoding
-------------------
 00    | 00
 01    | 01
 10    | 11
 11    | 10
-------------------
Analyzing FSM <FSM_1> for best encoding.
Optimizing FSM <p1/debRD/state_reg/FSM> on signal <state_reg[1:2]> with gray encoding.
Optimizing FSM <p1/debWR/state_reg/FSM> on signal <state_reg[1:2]> with gray encoding.
-------------------
 State | Encoding
-------------------
 00    | 00
 01    | 10
 10    | 11
 11    | 01
-------------------
Analyzing FSM <FSM_0> for best encoding.
Optimizing FSM <dapa/psr/rState/FSM> on signal <rState[1:2]> with gray encoding.
-------------------
 State | Encoding
-------------------
 00    | 00
 01    | 01
 10    | 11
-------------------

Synthesizing (advanced) Unit <fifo>.
INFO:Xst:3030 - HDL ADVISOR - Register <b_reg> currently described with an asynchronous reset, could be combined with distributed RAM <Mram_array_reg> for implementation on block RAM resources if you made this reset synchronous instead.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 8-word x 8-bit                      |          |
    |     clkA           | connected to signal <clk>           | rise     |
    |     weA            | connected to signal <wr_en>         | high     |
    |     addrA          | connected to signal <w_ptr_reg>     |          |
    |     diA            | connected to signal <w_data>        |          |
    -----------------------------------------------------------------------
    | Port B                                                              |
    |     aspect ratio   | 8-word x 8-bit                      |          |
    |     addrB          | connected to signal <r_ptr_reg>     |          |
    |     doB            | connected to signal <r_data>        |          |
    -----------------------------------------------------------------------
Unit <fifo> synthesized (advanced).

=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# FSMs                                                 : 4
# RAMs                                                 : 2
 8x8-bit dual-port distributed RAM                     : 2
# Adders/Subtractors                                   : 20
 1-bit adder carry out                                 : 1
 11-bit adder                                          : 1
 2-bit adder                                           : 1
 21-bit subtractor                                     : 2
 3-bit adder                                           : 6
 31-bit adder carry out                                : 1
 32-bit adder                                          : 3
 4-bit adder                                           : 2
 5-bit subtractor                                      : 2
 9-bit adder                                           : 1
# Registers                                            : 3483
 Flip-Flops                                            : 3483
# Comparators                                          : 6
 3-bit comparator equal                                : 4
 6-bit comparator less                                 : 2
# Multiplexers                                         : 39
 1-bit 16-to-1 multiplexer                             : 32
 1-bit 4-to-1 multiplexer                              : 4
 11-bit 4-to-1 multiplexer                             : 1
 2-bit 8-to-1 multiplexer                              : 1
 32-bit 4-to-1 multiplexer                             : 1
# Logic shifters                                       : 11
 32-bit shifter logical left                           : 4
 32-bit shifter logical right                          : 4
 64-bit shifter logical right                          : 1
 704-bit shifter logical right                         : 2
# Xors                                                 : 1
 1-bit xor2                                            : 1

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================

Optimizing unit <system> ...

Optimizing unit <control_store> ...

Optimizing unit <main_memory> ...

Optimizing unit <csai> ...

Optimizing unit <m_mir> ...

Optimizing unit <alu> ...

Optimizing unit <psr> ...

Optimizing unit <barrel_shifter> ...

Optimizing unit <debounce> ...

Optimizing unit <counter> ...

Optimizing unit <uart_rx> ...

Optimizing unit <fifo> ...

Optimizing unit <uart_tx> ...

Optimizing unit <datapath> ...

Optimizing unit <perifericos> ...

Mapping all equations...
Building and optimizing final netlist ...
INFO:Xst:2261 - The FF/Latch <cs/mmir/rState> in Unit <system> is equivalent to the following FF/Latch, which will be removed : <dapa/psr/rState_FSM_FFd2> 
INFO:Xst:2261 - The FF/Latch <cs/mmir/out_mir_39> in Unit <system> is equivalent to the following 6 FFs/Latches, which will be removed : <cs/mmir/out_mir_38> <cs/mmir/out_mir_36> <cs/mmir/out_mir_32> <cs/mmir/out_mir_31> <cs/mmir/out_mir_29> <cs/mmir/out_mir_25> 
INFO:Xst:2261 - The FF/Latch <cs/mmir/out_mir_24> in Unit <system> is equivalent to the following FF/Latch, which will be removed : <cs/mmir/out_mir_22> 
INFO:Xst:2261 - The FF/Latch <cs/mmir/out_mir_10> in Unit <system> is equivalent to the following FF/Latch, which will be removed : <cs/mmir/out_mir_9> 
Forward register balancing over carry chain p1/uart_master/baud_gen_unit/Madd_r_next_addsub0000_cy<0>
INFO:Xst:2260 - The FF/Latch <cs/mmir/out_mir_39> in Unit <system> is equivalent to the following FF/Latch : <dapa/Sh6336223_FRB> 
INFO:Xst:2261 - The FF/Latch <cs/mmir/out_mir_39> in Unit <system> is equivalent to the following FF/Latch, which will be removed : <dapa/Sh6336223_FRB> 

Pipelining and Register Balancing Report ...

Processing Unit <system> :
	Register(s) cs/mmir/out_mir_27 dapa/ir/datareg_1 dapa/ir/datareg_2 has(ve) been forward balanced into : dapa/Sh5889611_FRB.
	Register(s) cs/mmir/out_mir_27 dapa/ir/datareg_2 dapa/ir/datareg_1 has(ve) been forward balanced into : dapa/Sh5889511_FRB.
	Register(s) cs/mmir/out_mir_28 cs/mmir/out_mir_30 cs/mmir/out_mir_39 has(ve) been forward balanced into : dapa/Sh6336212_FRB.
	Register(s) cs/mmir/out_mir_28 cs/mmir/out_mir_39 cs/mmir/out_mir_30 has(ve) been forward balanced into : dapa/Sh6336231_FRB.
	Register(s) cs/mmir/out_mir_30 cs/mmir/out_mir_28 cs/mmir/out_mir_39 has(ve) been forward balanced into : dapa/Sh6336251_FRB.
	Register(s) cs/mmir/out_mir_34 cs/mmir/out_mir_39 has(ve) been forward balanced into : dapa/Sh2816711_FRB.
	Register(s) cs/mmir/out_mir_35 cs/mmir/out_mir_37 cs/mmir/out_mir_39 has(ve) been forward balanced into : dapa/Sh2816311_FRB.
	Register(s) cs/mmir/out_mir_35 cs/mmir/out_mir_39 cs/mmir/out_mir_37 has(ve) been forward balanced into : dapa/Sh2816342_FRB.
	Register(s) cs/mmir/out_mir_37 cs/mmir/out_mir_35 cs/mmir/out_mir_39 has(ve) been forward balanced into : dapa/Sh2816361_FRB.
	Register(s) cs/mmir/out_mir_37 cs/mmir/out_mir_39 cs/mmir/out_mir_35 has(ve) been forward balanced into : dapa/Sh2816321_FRB.
	Register(s) cs/mmir/out_mir_39 cs/mmir/out_mir_28 cs/mmir/out_mir_30 has(ve) been forward balanced into : dapa/Sh6336261_FRB.
	Register(s) cs/mmir/out_mir_39 cs/mmir/out_mir_30 cs/mmir/out_mir_27 has(ve) been forward balanced into : dapa/Sh5889321_FRB.
	Register(s) cs/mmir/out_mir_39 cs/mmir/out_mir_35 cs/mmir/out_mir_37 has(ve) been forward balanced into : dapa/Sh2816352_FRB.
	Register(s) cs/mmir/out_mir_39 cs/mmir/out_mir_37 has(ve) been forward balanced into : dapa/Sh281658_FRB.
	Register(s) dapa/Sh2369111_FRB dapa/ir/datareg_14 dapa/Sh2816311_FRB cs/mmir/out_mir_34 has(ve) been forward balanced into : dapa/Sh236921_FRB.
	Register(s) dapa/Sh2369111_FRB dapa/ir/datareg_14 dapa/Sh2816361_FRB cs/mmir/out_mir_34 has(ve) been forward balanced into : dapa/Sh236912_FRB.
	Register(s) dapa/Sh2369311_FRB dapa/ir/datareg_14 cs/mmir/out_mir_35 dapa/Sh2369321_FRB has(ve) been forward balanced into : dapa/Sh236941_FRB.
	Register(s) dapa/Sh2369321_FRB cs/mmir/out_mir_35 dapa/Sh2369311_FRB dapa/ir/datareg_14 has(ve) been forward balanced into : dapa/Sh236931_FRB.
	Register(s) dapa/Sh2369511_FRB dapa/ir/datareg_14 dapa/Sh2816321_FRB cs/mmir/out_mir_34 has(ve) been forward balanced into : dapa/Sh236981_FRB.
	Register(s) dapa/Sh2369511_FRB dapa/ir/datareg_14 dapa/Sh2816342_FRB cs/mmir/out_mir_34 has(ve) been forward balanced into : dapa/Sh236951_FRB.
	Register(s) dapa/Sh2369611_FRB dapa/ir/datareg_14 dapa/Sh2816332_FRB cs/mmir/out_mir_34 has(ve) been forward balanced into : dapa/Sh236971_FRB.
	Register(s) dapa/Sh2369611_FRB dapa/ir/datareg_14 dapa/Sh2816352_FRB cs/mmir/out_mir_34 has(ve) been forward balanced into : dapa/Sh236961_FRB.
	Register(s) dapa/Sh2816711_FRB cs/mmir/out_mir_34 dapa/ir/datareg_17 has(ve) been forward balanced into : dapa/Sh281711_FRB.
	Register(s) dapa/ir/datareg_2 dapa/ir/datareg_1 cs/mmir/out_mir_27 has(ve) been forward balanced into : dapa/Sh5889311_FRB.
	Register(s) mm/data_out_0 has(ve) been backward balanced into : mm/data_out_0_BRB0 mm/data_out_0_BRB1 mm/data_out_0_BRB3 mm/data_out_0_BRB4 mm/data_out_0_BRB5 mm/data_out_0_BRB6 mm/data_out_0_BRB7 mm/data_out_0_BRB8 mm/data_out_0_BRB9.
	Register(s) mm/data_out_1 has(ve) been backward balanced into : mm/data_out_1_BRB0 mm/data_out_1_BRB1 mm/data_out_1_BRB3 mm/data_out_1_BRB4 mm/data_out_1_BRB5 mm/data_out_1_BRB6 mm/data_out_1_BRB7 mm/data_out_1_BRB8 mm/data_out_1_BRB9.
	Register(s) mm/data_out_10 has(ve) been backward balanced into : mm/data_out_10_BRB0 mm/data_out_10_BRB1 mm/data_out_10_BRB3 mm/data_out_10_BRB4 mm/data_out_10_BRB5 mm/data_out_10_BRB6 mm/data_out_10_BRB7 mm/data_out_10_BRB8 mm/data_out_10_BRB9.
	Register(s) mm/data_out_11 has(ve) been backward balanced into : mm/data_out_11_BRB0 mm/data_out_11_BRB1 mm/data_out_11_BRB3 mm/data_out_11_BRB4 mm/data_out_11_BRB5 mm/data_out_11_BRB6 mm/data_out_11_BRB7 mm/data_out_11_BRB8 mm/data_out_11_BRB9.
	Register(s) mm/data_out_12 has(ve) been backward balanced into : mm/data_out_12_BRB0 mm/data_out_12_BRB1 mm/data_out_12_BRB3 mm/data_out_12_BRB4 mm/data_out_12_BRB5 mm/data_out_12_BRB6 mm/data_out_12_BRB7 mm/data_out_12_BRB8 mm/data_out_12_BRB9.
	Register(s) mm/data_out_13 has(ve) been backward balanced into : mm/data_out_13_BRB0 mm/data_out_13_BRB1 mm/data_out_13_BRB3 mm/data_out_13_BRB4 mm/data_out_13_BRB5 mm/data_out_13_BRB6 mm/data_out_13_BRB7 mm/data_out_13_BRB8 mm/data_out_13_BRB9.
	Register(s) mm/data_out_14 has(ve) been backward balanced into : mm/data_out_14_BRB0 mm/data_out_14_BRB1 mm/data_out_14_BRB3 mm/data_out_14_BRB4 mm/data_out_14_BRB5 mm/data_out_14_BRB6 mm/data_out_14_BRB7 mm/data_out_14_BRB8 mm/data_out_14_BRB9.
	Register(s) mm/data_out_15 has(ve) been backward balanced into : mm/data_out_15_BRB0 mm/data_out_15_BRB1 mm/data_out_15_BRB3 mm/data_out_15_BRB4 mm/data_out_15_BRB5 mm/data_out_15_BRB6 mm/data_out_15_BRB7 mm/data_out_15_BRB8 mm/data_out_15_BRB9.
	Register(s) mm/data_out_16 has(ve) been backward balanced into : mm/data_out_16_BRB0 mm/data_out_16_BRB1 mm/data_out_16_BRB3 mm/data_out_16_BRB4 mm/data_out_16_BRB5 mm/data_out_16_BRB6 mm/data_out_16_BRB7 mm/data_out_16_BRB8 mm/data_out_16_BRB9.
	Register(s) mm/data_out_17 has(ve) been backward balanced into : mm/data_out_17_BRB0 mm/data_out_17_BRB1 mm/data_out_17_BRB3 mm/data_out_17_BRB4 mm/data_out_17_BRB5 mm/data_out_17_BRB6 mm/data_out_17_BRB7 mm/data_out_17_BRB8 mm/data_out_17_BRB9.
	Register(s) mm/data_out_18 has(ve) been backward balanced into : mm/data_out_18_BRB0 mm/data_out_18_BRB1 mm/data_out_18_BRB3 mm/data_out_18_BRB4 mm/data_out_18_BRB5 mm/data_out_18_BRB6 mm/data_out_18_BRB7 mm/data_out_18_BRB8 mm/data_out_18_BRB9.
	Register(s) mm/data_out_19 has(ve) been backward balanced into : mm/data_out_19_BRB0 mm/data_out_19_BRB1 mm/data_out_19_BRB3 mm/data_out_19_BRB4 mm/data_out_19_BRB5 mm/data_out_19_BRB6 mm/data_out_19_BRB7 mm/data_out_19_BRB8 mm/data_out_19_BRB9.
	Register(s) mm/data_out_2 has(ve) been backward balanced into : mm/data_out_2_BRB0 mm/data_out_2_BRB1 mm/data_out_2_BRB3 mm/data_out_2_BRB4 mm/data_out_2_BRB5 mm/data_out_2_BRB6 mm/data_out_2_BRB7 mm/data_out_2_BRB8 mm/data_out_2_BRB9.
	Register(s) mm/data_out_20 has(ve) been backward balanced into : mm/data_out_20_BRB0 mm/data_out_20_BRB1 mm/data_out_20_BRB3 mm/data_out_20_BRB4 mm/data_out_20_BRB5 mm/data_out_20_BRB6 mm/data_out_20_BRB7 mm/data_out_20_BRB8 mm/data_out_20_BRB9.
	Register(s) mm/data_out_21 has(ve) been backward balanced into : mm/data_out_21_BRB0 mm/data_out_21_BRB1 mm/data_out_21_BRB3 mm/data_out_21_BRB4 mm/data_out_21_BRB5 mm/data_out_21_BRB6 mm/data_out_21_BRB7 mm/data_out_21_BRB8 mm/data_out_21_BRB9.
	Register(s) mm/data_out_22 has(ve) been backward balanced into : mm/data_out_22_BRB0 mm/data_out_22_BRB1 mm/data_out_22_BRB3 mm/data_out_22_BRB4 mm/data_out_22_BRB5 mm/data_out_22_BRB6 mm/data_out_22_BRB7 mm/data_out_22_BRB8 mm/data_out_22_BRB9.
	Register(s) mm/data_out_23 has(ve) been backward balanced into : mm/data_out_23_BRB0 mm/data_out_23_BRB1 mm/data_out_23_BRB3 mm/data_out_23_BRB4 mm/data_out_23_BRB5 mm/data_out_23_BRB6 mm/data_out_23_BRB7 mm/data_out_23_BRB8 mm/data_out_23_BRB9.
	Register(s) mm/data_out_24 has(ve) been backward balanced into : mm/data_out_24_BRB0 mm/data_out_24_BRB1 mm/data_out_24_BRB3 mm/data_out_24_BRB4 mm/data_out_24_BRB5 mm/data_out_24_BRB6 mm/data_out_24_BRB7 mm/data_out_24_BRB8 mm/data_out_24_BRB9.
	Register(s) mm/data_out_25 has(ve) been backward balanced into : mm/data_out_25_BRB0 mm/data_out_25_BRB1 mm/data_out_25_BRB3 mm/data_out_25_BRB4 mm/data_out_25_BRB5 mm/data_out_25_BRB6 mm/data_out_25_BRB7 mm/data_out_25_BRB8 mm/data_out_25_BRB9.
	Register(s) mm/data_out_26 has(ve) been backward balanced into : mm/data_out_26_BRB0 mm/data_out_26_BRB1 mm/data_out_26_BRB3 mm/data_out_26_BRB4 mm/data_out_26_BRB5 mm/data_out_26_BRB6 mm/data_out_26_BRB7 mm/data_out_26_BRB8 mm/data_out_26_BRB9.
	Register(s) mm/data_out_27 has(ve) been backward balanced into : mm/data_out_27_BRB0 mm/data_out_27_BRB1 mm/data_out_27_BRB3 mm/data_out_27_BRB4 mm/data_out_27_BRB5 mm/data_out_27_BRB6 mm/data_out_27_BRB7 mm/data_out_27_BRB8 mm/data_out_27_BRB9.
	Register(s) mm/data_out_28 has(ve) been backward balanced into : mm/data_out_28_BRB0 mm/data_out_28_BRB1 mm/data_out_28_BRB3 mm/data_out_28_BRB4 mm/data_out_28_BRB5 mm/data_out_28_BRB6 mm/data_out_28_BRB7 mm/data_out_28_BRB8 mm/data_out_28_BRB9.
	Register(s) mm/data_out_29 has(ve) been backward balanced into : mm/data_out_29_BRB0 mm/data_out_29_BRB1 mm/data_out_29_BRB3 mm/data_out_29_BRB4 mm/data_out_29_BRB5 mm/data_out_29_BRB6 mm/data_out_29_BRB7 mm/data_out_29_BRB8 mm/data_out_29_BRB9.
	Register(s) mm/data_out_3 has(ve) been backward balanced into : mm/data_out_3_BRB0 mm/data_out_3_BRB1 mm/data_out_3_BRB3 mm/data_out_3_BRB4 mm/data_out_3_BRB5 mm/data_out_3_BRB6 mm/data_out_3_BRB7 mm/data_out_3_BRB8 mm/data_out_3_BRB9.
	Register(s) mm/data_out_30 has(ve) been backward balanced into : mm/data_out_30_BRB0 mm/data_out_30_BRB1 mm/data_out_30_BRB3 mm/data_out_30_BRB4 mm/data_out_30_BRB5 mm/data_out_30_BRB6 mm/data_out_30_BRB7 mm/data_out_30_BRB8 mm/data_out_30_BRB9.
	Register(s) mm/data_out_31 has(ve) been backward balanced into : mm/data_out_31_BRB0 mm/data_out_31_BRB1 mm/data_out_31_BRB3 mm/data_out_31_BRB4 mm/data_out_31_BRB5 mm/data_out_31_BRB6 mm/data_out_31_BRB7 mm/data_out_31_BRB8 mm/data_out_31_BRB9 mm/data_out_31_BRB10.
	Register(s) mm/data_out_4 has(ve) been backward balanced into : mm/data_out_4_BRB0 mm/data_out_4_BRB1 mm/data_out_4_BRB3 mm/data_out_4_BRB4 mm/data_out_4_BRB5 mm/data_out_4_BRB6 mm/data_out_4_BRB7 mm/data_out_4_BRB8 mm/data_out_4_BRB9.
	Register(s) mm/data_out_5 has(ve) been backward balanced into : mm/data_out_5_BRB0 mm/data_out_5_BRB1 mm/data_out_5_BRB3 mm/data_out_5_BRB4 mm/data_out_5_BRB5 mm/data_out_5_BRB6 mm/data_out_5_BRB7 mm/data_out_5_BRB8 mm/data_out_5_BRB9.
	Register(s) mm/data_out_6 has(ve) been backward balanced into : mm/data_out_6_BRB0 mm/data_out_6_BRB1 mm/data_out_6_BRB3 mm/data_out_6_BRB4 mm/data_out_6_BRB5 mm/data_out_6_BRB6 mm/data_out_6_BRB7 mm/data_out_6_BRB8 mm/data_out_6_BRB9.
	Register(s) mm/data_out_7 has(ve) been backward balanced into : mm/data_out_7_BRB0 mm/data_out_7_BRB1 mm/data_out_7_BRB3 mm/data_out_7_BRB4 mm/data_out_7_BRB5 mm/data_out_7_BRB6 mm/data_out_7_BRB7 mm/data_out_7_BRB8 mm/data_out_7_BRB9.
	Register(s) mm/data_out_8 has(ve) been backward balanced into : mm/data_out_8_BRB0 mm/data_out_8_BRB1 mm/data_out_8_BRB3 mm/data_out_8_BRB4 mm/data_out_8_BRB5 mm/data_out_8_BRB6 mm/data_out_8_BRB7 mm/data_out_8_BRB8 mm/data_out_8_BRB9.
	Register(s) mm/data_out_9 has(ve) been backward balanced into : mm/data_out_9_BRB0 mm/data_out_9_BRB1 mm/data_out_9_BRB3 mm/data_out_9_BRB4 mm/data_out_9_BRB5 mm/data_out_9_BRB6 mm/data_out_9_BRB7 mm/data_out_9_BRB8 mm/data_out_9_BRB9.
Unit <system> processed.
FlipFlop dapa/psr/nout has been replicated 1 time(s) to handle iob=true attribute.
FlipFlop dapa/psr/zout has been replicated 1 time(s) to handle iob=true attribute.
FlipFlop dapa/psr/vout has been replicated 1 time(s) to handle iob=true attribute.
FlipFlop dapa/psr/cout has been replicated 1 time(s) to handle iob=true attribute.
FlipFlop dapa/temp_0/datareg_11 has been replicated 1 time(s) to handle iob=true attribute.
FlipFlop dapa/temp_0/datareg_10 has been replicated 1 time(s) to handle iob=true attribute.
FlipFlop dapa/temp_0/datareg_9 has been replicated 1 time(s) to handle iob=true attribute.
FlipFlop dapa/temp_0/datareg_8 has been replicated 1 time(s) to handle iob=true attribute.
FlipFlop dapa/temp_0/datareg_7 has been replicated 1 time(s) to handle iob=true attribute.
FlipFlop dapa/temp_0/datareg_6 has been replicated 1 time(s) to handle iob=true attribute.
FlipFlop dapa/temp_0/datareg_5 has been replicated 1 time(s) to handle iob=true attribute.
FlipFlop dapa/temp_0/datareg_4 has been replicated 1 time(s) to handle iob=true attribute.

Final Macro Processing ...

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 3725
 Flip-Flops                                            : 3725

=========================================================================

=========================================================================
*                           Partition Report                            *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Final Report                               *
=========================================================================
Final Results
RTL Top Level Output File Name     : system.ngr
Top Level Output File Name         : system.ngc
Output Format                      : ngc
Optimization Goal                  : AREA
Keep Hierarchy                     : no

Design Statistics
# IOs                              : 48

Cell Usage :
# BELS                             : 5059
#      GND                         : 1
#      INV                         : 44
#      LUT1                        : 10
#      LUT2                        : 273
#      LUT3                        : 485
#      LUT4                        : 3604
#      MUXCY                       : 203
#      MUXF5                       : 219
#      MUXF6                       : 32
#      VCC                         : 1
#      XORCY                       : 187
# FlipFlops/Latches                : 3725
#      FD_1                        : 56
#      FDC                         : 113
#      FDC_1                       : 46
#      FDCE_1                      : 584
#      FDE                         : 2689
#      FDP                         : 4
#      FDRE                        : 151
#      FDS_1                       : 9
#      FDSE                        : 73
# RAMS                             : 16
#      RAM16X1D                    : 16
# Clock Buffers                    : 1
#      BUFGP                       : 1
# IO Buffers                       : 47
#      IBUF                        : 2
#      OBUF                        : 45
=========================================================================

Device utilization summary:
---------------------------

Selected Device : 3s500evq100-4 

 Number of Slices:                     2516  out of   4656    54%  
 Number of Slice Flip Flops:           3712  out of   9312    39%  
 Number of 4 input LUTs:               4448  out of   9312    47%  
    Number used as logic:              4416
    Number used as RAMs:                 32
 Number of IOs:                          48
 Number of bonded IOBs:                  48  out of     66    72%  
    IOB Flip Flops:                      13
 Number of GCLKs:                         1  out of     24     4%  

---------------------------
Partition Resource Summary:
---------------------------

  No Partitions were found in this design.

---------------------------


=========================================================================
TIMING REPORT

NOTE: THESE TIMING NUMBERS ARE ONLY A SYNTHESIS ESTIMATE.
      FOR ACCURATE TIMING INFORMATION PLEASE REFER TO THE TRACE REPORT
      GENERATED AFTER PLACE-and-ROUTE.

Clock Information:
------------------
-----------------------------------+------------------------+-------+
Clock Signal                       | Clock buffer(FF name)  | Load  |
-----------------------------------+------------------------+-------+
clk                                | BUFGP                  | 3741  |
-----------------------------------+------------------------+-------+

Asynchronous Control Signals Information:
----------------------------------------
-----------------------------------+--------------------------+-------+
Control Signal                     | Buffer(FF name)          | Load  |
-----------------------------------+--------------------------+-------+
w_rst(w_rst1_INV_0:O)              | NONE(cs/csai/next_addr_0)| 482   |
w_rst1_INV_0_1(w_rst1_INV_0_1:O)   | NONE(dapa/Sh5889111_FRB) | 265   |
-----------------------------------+--------------------------+-------+

Timing Summary:
---------------
Speed Grade: -4

   Minimum period: 33.483ns (Maximum Frequency: 29.866MHz)
   Minimum input arrival time before clock: 8.313ns
   Maximum output required time after clock: 10.827ns
   Maximum combinational path delay: No path found

Timing Detail:
--------------
All values displayed in nanoseconds (ns)

=========================================================================
Timing constraint: Default period analysis for Clock 'clk'
  Clock period: 33.483ns (frequency: 29.866MHz)
  Total number of paths / destination ports: 197188046 / 7358
-------------------------------------------------------------------------
Delay:               16.742ns (Levels of Logic = 11)
  Source:            dapa/Sh236981_FRB (FF)
  Destination:       mm/data2111_31 (FF)
  Source Clock:      clk falling
  Destination Clock: clk rising

  Data Path: dapa/Sh236981_FRB to mm/data2111_31
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FD_1:C->Q            31   0.591   1.297  dapa/Sh236981_FRB (dapa/Sh236981_FRB)
     LUT4:I2->O            1   0.704   0.595  dapa/Sh2828131 (dapa/Sh2828131)
     LUT2:I0->O            1   0.704   0.424  dapa/Sh2828132 (dapa/Sh2828132)
     LUT4:I3->O            3   0.704   0.535  dapa/Sh2828152 (dapa/Sh2828152)
     LUT4:I3->O           68   0.704   1.278  dapa/Sh2828163 (w_bus_a<12>)
     LUT4:I3->O            1   0.704   0.000  mm/data2049_not000111_wg_lut<4> (mm/data2049_not000111_wg_lut<4>)
     MUXCY:S->O            1   0.464   0.000  mm/data2049_not000111_wg_cy<4> (mm/data2049_not000111_wg_cy<4>)
     MUXCY:CI->O           5   0.331   0.712  mm/data2049_not000111_wg_cy<5> (mm/data0_and0000)
     LUT2:I1->O            5   0.704   0.637  mm/data2049_not000111 (mm/N34)
     LUT4:I3->O            6   0.704   0.704  mm/data2049_not000121 (mm/N40)
     LUT3:I2->O           15   0.704   1.021  mm/data2084_not000111 (mm/N61)
     LUT4:I3->O           32   0.704   1.262  mm/data2095_not00011 (mm/data2095_not0001)
     FDE:CE                    0.555          mm/data2095_0
    ----------------------------------------
    Total                     16.742ns (8.277ns logic, 8.465ns route)
                                       (49.4% logic, 50.6% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'clk'
  Total number of paths / destination ports: 2750 / 2690
-------------------------------------------------------------------------
Offset:              8.313ns (Levels of Logic = 4)
  Source:            rst (PAD)
  Destination:       mm/data2111_31 (FF)
  Destination Clock: clk rising

  Data Path: rst to mm/data2111_31
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O            43   1.218   1.441  rst_IBUF (rst_IBUF)
     LUT4:I0->O            6   0.704   0.704  mm/data2049_not000121 (mm/N40)
     LUT3:I2->O           15   0.704   1.021  mm/data2084_not000111 (mm/N61)
     LUT4:I3->O           32   0.704   1.262  mm/data2095_not00011 (mm/data2095_not0001)
     FDE:CE                    0.555          mm/data2095_0
    ----------------------------------------
    Total                      8.313ns (3.885ns logic, 4.428ns route)
                                       (46.7% logic, 53.3% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'clk'
  Total number of paths / destination ports: 713 / 45
-------------------------------------------------------------------------
Offset:              10.827ns (Levels of Logic = 5)
  Source:            dapa/Sh236941_FRB (FF)
  Destination:       address<2> (PAD)
  Source Clock:      clk falling

  Data Path: dapa/Sh236941_FRB to address<2>
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FD_1:C->Q            63   0.591   1.307  dapa/Sh236941_FRB (dapa/Sh236941_FRB)
     LUT4:I2->O            1   0.704   0.595  dapa/Sh2820126 (dapa/Sh2820126)
     LUT2:I0->O            1   0.704   0.424  dapa/Sh2820132 (dapa/Sh2820132)
     LUT4:I3->O            3   0.704   0.535  dapa/Sh2820152 (dapa/Sh2820152)
     LUT4:I3->O          110   0.704   1.287  dapa/Sh2820163 (address_2_OBUF)
     OBUF:I->O                 3.272          address_2_OBUF (address<2>)
    ----------------------------------------
    Total                     10.827ns (6.679ns logic, 4.148ns route)
                                       (61.7% logic, 38.3% route)

=========================================================================


Total REAL time to Xst completion: 216.00 secs
Total CPU time to Xst completion: 214.93 secs
 
--> 


Total memory usage is 468184 kilobytes

Number of errors   :    0 (   0 filtered)
Number of warnings :   13 (   0 filtered)
Number of infos    :   10 (   0 filtered)

